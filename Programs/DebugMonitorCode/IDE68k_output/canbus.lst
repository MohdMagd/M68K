680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 28 Mar 2019      Time: 19:44:08          Source: C:\M68K\PROGRAMS\DEBUGMONITORCODE\IDE68K_OUTPUT\CANBUS.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  1142      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  0000      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  1136      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  113A      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  1142 0800 
08000034  113E      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  044C      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\M68K\PROGRAMS\DEBUGMONITORCODE\CANBUS\CANBUS CONTROLLER ROUTINES.C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; /*********************************************************************************************
                      47   ; **  RS232 port addresses
                      48   ; *********************************************************************************************/
                      49   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                      50   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                      51   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                      52   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                      53   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                      54   ; /*********************************************************************************************
                      55   ; ** These addresses and definitions were taken from Appendix 7 of the Can Controller
                      56   ; ** application note and adapted for the 68k assignment
                      57   ; *********************************************************************************************/
                      58   ; /*
                      59   ; ** definition for the SJA1000 registers and bits based on 68k address map areas
                      60   ; ** assume the addresses for the 2 can controllers given in the assignment
                      61   ; **
                      62   ; ** Registers are defined in terms of the following Macro for each Can controller,
                      63   ; ** where (i) represents an registers number
                      64   ; */
                      65   ; #define CAN0_CONTROLLER(i) (*(volatile unsigned char *)(0x00500000 + (i << 1)))
                      66   ; #define CAN1_CONTROLLER(i) (*(volatile unsigned char *)(0x00500200 + (i << 1)))
                      67   ; /* Can 0 register definitions */
                      68   ; #define Can0_ModeControlReg      CAN0_CONTROLLER(0)
                      69   ; #define Can0_CommandReg          CAN0_CONTROLLER(1)
                      70   ; #define Can0_StatusReg           CAN0_CONTROLLER(2)
                      71   ; #define Can0_InterruptReg        CAN0_CONTROLLER(3)
                      72   ; #define Can0_InterruptEnReg      CAN0_CONTROLLER(4) /* PeliCAN mode */
                      73   ; #define Can0_BusTiming0Reg       CAN0_CONTROLLER(6)
                      74   ; #define Can0_BusTiming1Reg       CAN0_CONTROLLER(7)
                      75   ; #define Can0_OutControlReg       CAN0_CONTROLLER(8)
                      76   ; /* address definitions of Other Registers */
                      77   ; #define Can0_ArbLostCapReg       CAN0_CONTROLLER(11)
                      78   ; #define Can0_ErrCodeCapReg       CAN0_CONTROLLER(12)
                      79   ; #define Can0_ErrWarnLimitReg     CAN0_CONTROLLER(13)
                      80   ; #define Can0_RxErrCountReg       CAN0_CONTROLLER(14)
                      81   ; #define Can0_TxErrCountReg       CAN0_CONTROLLER(15)
                      82   ; #define Can0_RxMsgCountReg       CAN0_CONTROLLER(29)
                      83   ; #define Can0_RxBufStartAdr       CAN0_CONTROLLER(30)
                      84   ; #define Can0_ClockDivideReg      CAN0_CONTROLLER(31)
                      85   ; /* address definitions of Acceptance Code & Mask Registers - RESET MODE */
                      86   ; #define Can0_AcceptCode0Reg      CAN0_CONTROLLER(16)
                      87   ; #define Can0_AcceptCode1Reg      CAN0_CONTROLLER(17)
                      88   ; #define Can0_AcceptCode2Reg      CAN0_CONTROLLER(18)
                      89   ; #define Can0_AcceptCode3Reg      CAN0_CONTROLLER(19)
                      90   ; #define Can0_AcceptMask0Reg      CAN0_CONTROLLER(20)
                      91   ; #define Can0_AcceptMask1Reg      CAN0_CONTROLLER(21)
                      92   ; #define Can0_AcceptMask2Reg      CAN0_CONTROLLER(22)
                      93   ; #define Can0_AcceptMask3Reg      CAN0_CONTROLLER(23)
                      94   ; /* address definitions Rx Buffer - OPERATING MODE - Read only register*/
                      95   ; #define Can0_RxFrameInfo         CAN0_CONTROLLER(16)
                      96   ; #define Can0_RxBuffer1           CAN0_CONTROLLER(17)
                      97   ; #define Can0_RxBuffer2           CAN0_CONTROLLER(18)
                      98   ; #define Can0_RxBuffer3           CAN0_CONTROLLER(19)
                      99   ; #define Can0_RxBuffer4           CAN0_CONTROLLER(20)
                     100   ; #define Can0_RxBuffer5           CAN0_CONTROLLER(21)
                     101   ; #define Can0_RxBuffer6           CAN0_CONTROLLER(22)
                     102   ; #define Can0_RxBuffer7           CAN0_CONTROLLER(23)
                     103   ; #define Can0_RxBuffer8           CAN0_CONTROLLER(24)
                     104   ; #define Can0_RxBuffer9           CAN0_CONTROLLER(25)
                     105   ; #define Can0_RxBuffer10          CAN0_CONTROLLER(26)
                     106   ; #define Can0_RxBuffer11          CAN0_CONTROLLER(27)
                     107   ; #define Can0_RxBuffer12          CAN0_CONTROLLER(28)
                     108   ; /* address definitions of the Tx-Buffer - OPERATING MODE - Write only register */
                     109   ; #define Can0_TxFrameInfo         CAN0_CONTROLLER(16)
                     110   ; #define Can0_TxBuffer1           CAN0_CONTROLLER(17)
                     111   ; #define Can0_TxBuffer2           CAN0_CONTROLLER(18)
                     112   ; #define Can0_TxBuffer3           CAN0_CONTROLLER(19)
                     113   ; #define Can0_TxBuffer4           CAN0_CONTROLLER(20)
                     114   ; #define Can0_TxBuffer5           CAN0_CONTROLLER(21)
                     115   ; #define Can0_TxBuffer6           CAN0_CONTROLLER(22)
                     116   ; #define Can0_TxBuffer7           CAN0_CONTROLLER(23)
                     117   ; #define Can0_TxBuffer8           CAN0_CONTROLLER(24)
                     118   ; #define Can0_TxBuffer9           CAN0_CONTROLLER(25)
                     119   ; #define Can0_TxBuffer10          CAN0_CONTROLLER(26)
                     120   ; #define Can0_TxBuffer11          CAN0_CONTROLLER(27)
                     121   ; #define Can0_TxBuffer12          CAN0_CONTROLLER(28)
                     122   ; /* read only addresses */
                     123   ; #define Can0_TxFrameInfoRd       CAN0_CONTROLLER(96)
                     124   ; #define Can0_TxBufferRd1         CAN0_CONTROLLER(97)
                     125   ; #define Can0_TxBufferRd2         CAN0_CONTROLLER(98)
                     126   ; #define Can0_TxBufferRd3         CAN0_CONTROLLER(99)
                     127   ; #define Can0_TxBufferRd4         CAN0_CONTROLLER(100)
                     128   ; #define Can0_TxBufferRd5         CAN0_CONTROLLER(101)
                     129   ; #define Can0_TxBufferRd6         CAN0_CONTROLLER(102)
                     130   ; #define Can0_TxBufferRd7         CAN0_CONTROLLER(103)
                     131   ; #define Can0_TxBufferRd8         CAN0_CONTROLLER(104)
                     132   ; #define Can0_TxBufferRd9         CAN0_CONTROLLER(105)
                     133   ; #define Can0_TxBufferRd10        CAN0_CONTROLLER(106)
                     134   ; #define Can0_TxBufferRd11        CAN0_CONTROLLER(107)
                     135   ; #define Can0_TxBufferRd12        CAN0_CONTROLLER(108)
                     136   ; /* CAN1 Controller register definitions */
                     137   ; #define Can1_ModeControlReg      CAN1_CONTROLLER(0)
                     138   ; #define Can1_CommandReg          CAN1_CONTROLLER(1)
                     139   ; #define Can1_StatusReg           CAN1_CONTROLLER(2)
                     140   ; #define Can1_InterruptReg        CAN1_CONTROLLER(3)
                     141   ; #define Can1_InterruptEnReg      CAN1_CONTROLLER(4) /* PeliCAN mode */
                     142   ; #define Can1_BusTiming0Reg       CAN1_CONTROLLER(6)
                     143   ; #define Can1_BusTiming1Reg       CAN1_CONTROLLER(7)
                     144   ; #define Can1_OutControlReg       CAN1_CONTROLLER(8)
                     145   ; /* address definitions of Other Registers */
                     146   ; #define Can1_ArbLostCapReg       CAN1_CONTROLLER(11)
                     147   ; #define Can1_ErrCodeCapReg       CAN1_CONTROLLER(12)
                     148   ; #define Can1_ErrWarnLimitReg     CAN1_CONTROLLER(13)
                     149   ; #define Can1_RxErrCountReg       CAN1_CONTROLLER(14)
                     150   ; #define Can1_TxErrCountReg       CAN1_CONTROLLER(15)
                     151   ; #define Can1_RxMsgCountReg       CAN1_CONTROLLER(29)
                     152   ; #define Can1_RxBufStartAdr       CAN1_CONTROLLER(30)
                     153   ; #define Can1_ClockDivideReg      CAN1_CONTROLLER(31)
                     154   ; /* address definitions of Acceptance Code & Mask Registers - RESET MODE */
                     155   ; #define Can1_AcceptCode0Reg      CAN1_CONTROLLER(16)
                     156   ; #define Can1_AcceptCode1Reg      CAN1_CONTROLLER(17)
                     157   ; #define Can1_AcceptCode2Reg      CAN1_CONTROLLER(18)
                     158   ; #define Can1_AcceptCode3Reg      CAN1_CONTROLLER(19)
                     159   ; #define Can1_AcceptMask0Reg      CAN1_CONTROLLER(20)
                     160   ; #define Can1_AcceptMask1Reg      CAN1_CONTROLLER(21)
                     161   ; #define Can1_AcceptMask2Reg      CAN1_CONTROLLER(22)
                     162   ; #define Can1_AcceptMask3Reg      CAN1_CONTROLLER(23)
                     163   ; /* address definitions Rx Buffer - OPERATING MODE - Read only register*/
                     164   ; #define Can1_RxFrameInfo         CAN1_CONTROLLER(16)
                     165   ; #define Can1_RxBuffer1           CAN1_CONTROLLER(17)
                     166   ; #define Can1_RxBuffer2           CAN1_CONTROLLER(18)
                     167   ; #define Can1_RxBuffer3           CAN1_CONTROLLER(19)
                     168   ; #define Can1_RxBuffer4           CAN1_CONTROLLER(20)
                     169   ; #define Can1_RxBuffer5           CAN1_CONTROLLER(21)
                     170   ; #define Can1_RxBuffer6           CAN1_CONTROLLER(22)
                     171   ; #define Can1_RxBuffer7           CAN1_CONTROLLER(23)
                     172   ; #define Can1_RxBuffer8           CAN1_CONTROLLER(24)
                     173   ; #define Can1_RxBuffer9           CAN1_CONTROLLER(25)
                     174   ; #define Can1_RxBuffer10          CAN1_CONTROLLER(26)
                     175   ; #define Can1_RxBuffer11          CAN1_CONTROLLER(27)
                     176   ; #define Can1_RxBuffer12          CAN1_CONTROLLER(28)
                     177   ; /* address definitions of the Tx-Buffer - OPERATING MODE - Write only register */
                     178   ; #define Can1_TxFrameInfo         CAN1_CONTROLLER(16)
                     179   ; #define Can1_TxBuffer1           CAN1_CONTROLLER(17)
                     180   ; #define Can1_TxBuffer2           CAN1_CONTROLLER(18)
                     181   ; #define Can1_TxBuffer3           CAN1_CONTROLLER(19)
                     182   ; #define Can1_TxBuffer4           CAN1_CONTROLLER(20)
                     183   ; #define Can1_TxBuffer5           CAN1_CONTROLLER(21)
                     184   ; #define Can1_TxBuffer6           CAN1_CONTROLLER(22)
                     185   ; #define Can1_TxBuffer7           CAN1_CONTROLLER(23)
                     186   ; #define Can1_TxBuffer8           CAN1_CONTROLLER(24)
                     187   ; #define Can1_TxBuffer9           CAN1_CONTROLLER(25)
                     188   ; #define Can1_TxBuffer10          CAN1_CONTROLLER(26)
                     189   ; #define Can1_TxBuffer11          CAN1_CONTROLLER(27)
                     190   ; #define Can1_TxBuffer12          CAN1_CONTROLLER(28)
                     191   ; /* read only addresses */
                     192   ; #define Can1_TxFrameInfoRd       CAN1_CONTROLLER(96)
                     193   ; #define Can1_TxBufferRd1         CAN1_CONTROLLER(97)
                     194   ; #define Can1_TxBufferRd2         CAN1_CONTROLLER(98)
                     195   ; #define Can1_TxBufferRd3         CAN1_CONTROLLER(99)
                     196   ; #define Can1_TxBufferRd4         CAN1_CONTROLLER(100)
                     197   ; #define Can1_TxBufferRd5         CAN1_CONTROLLER(101)
                     198   ; #define Can1_TxBufferRd6         CAN1_CONTROLLER(102)
                     199   ; #define Can1_TxBufferRd7         CAN1_CONTROLLER(103)
                     200   ; #define Can1_TxBufferRd8         CAN1_CONTROLLER(104)
                     201   ; #define Can1_TxBufferRd9         CAN1_CONTROLLER(105)
                     202   ; #define Can1_TxBufferRd10        CAN1_CONTROLLER(106)
                     203   ; #define Can1_TxBufferRd11        CAN1_CONTROLLER(107)
                     204   ; #define Can1_TxBufferRd12        CAN1_CONTROLLER(108)
                     205   ; /* bit definitions for the Mode & Control Register */
                     206   ; #define RM_RR_Bit 0x01 /* reset mode (request) bit */
                     207   ; #define LOM_Bit 0x02 /* listen only mode bit */
                     208   ; #define STM_Bit 0x04 /* self test mode bit */
                     209   ; #define AFM_Bit 0x08 /* acceptance filter mode bit */
                     210   ; #define SM_Bit  0x10 /* enter sleep mode bit */
                     211   ; /* bit definitions for the Interrupt Enable & Control Register */
                     212   ; #define RIE_Bit 0x01 /* receive interrupt enable bit */
                     213   ; #define TIE_Bit 0x02 /* transmit interrupt enable bit */
                     214   ; #define EIE_Bit 0x04 /* error warning interrupt enable bit */
                     215   ; #define DOIE_Bit 0x08 /* data overrun interrupt enable bit */
                     216   ; #define WUIE_Bit 0x10 /* wake-up interrupt enable bit */
                     217   ; #define EPIE_Bit 0x20 /* error passive interrupt enable bit */
                     218   ; #define ALIE_Bit 0x40 /* arbitration lost interr. enable bit*/
                     219   ; #define BEIE_Bit 0x80 /* bus error interrupt enable bit */
                     220   ; /* bit definitions for the Command Register */
                     221   ; #define TR_Bit 0x01 /* transmission request bit */
                     222   ; #define AT_Bit 0x02 /* abort transmission bit */
                     223   ; #define RRB_Bit 0x04 /* release receive buffer bit */
                     224   ; #define CDO_Bit 0x08 /* clear data overrun bit */
                     225   ; #define SRR_Bit 0x10 /* self reception request bit */
                     226   ; /* bit definitions for the Status Register */
                     227   ; #define RBS_Bit 0x01 /* receive buffer status bit */
                     228   ; #define DOS_Bit 0x02 /* data overrun status bit */
                     229   ; #define TBS_Bit 0x04 /* transmit buffer status bit */
                     230   ; #define TCS_Bit 0x08 /* transmission complete status bit */
                     231   ; #define RS_Bit 0x10 /* receive status bit */
                     232   ; #define TS_Bit 0x20 /* transmit status bit */
                     233   ; #define ES_Bit 0x40 /* error status bit */
                     234   ; #define BS_Bit 0x80 /* bus status bit */
                     235   ; /* bit definitions for the Interrupt Register */
                     236   ; #define RI_Bit 0x01 /* receive interrupt bit */
                     237   ; #define TI_Bit 0x02 /* transmit interrupt bit */
                     238   ; #define EI_Bit 0x04 /* error warning interrupt bit */
                     239   ; #define DOI_Bit 0x08 /* data overrun interrupt bit */
                     240   ; #define WUI_Bit 0x10 /* wake-up interrupt bit */
                     241   ; #define EPI_Bit 0x20 /* error passive interrupt bit */
                     242   ; #define ALI_Bit 0x40 /* arbitration lost interrupt bit */
                     243   ; #define BEI_Bit 0x80 /* bus error interrupt bit */
                     244   ; /* bit definitions for the Bus Timing Registers */
                     245   ; #define SAM_Bit 0x80                        /* sample mode bit 1 == the bus is sampled 3 times, 0 == the bus is sampled once */
                     246   ; /* bit definitions for the Output Control Register OCMODE1, OCMODE0 */
                     247   ; #define BiPhaseMode 0x00 /* bi-phase output mode */
                     248   ; #define NormalMode 0x02 /* normal output mode */
                     249   ; #define ClkOutMode 0x03 /* clock output mode */
                     250   ; /* output pin configuration for TX1 */
                     251   ; #define OCPOL1_Bit 0x20 /* output polarity control bit */
                     252   ; #define Tx1Float 0x00 /* configured as float */
                     253   ; #define Tx1PullDn 0x40 /* configured as pull-down */
                     254   ; #define Tx1PullUp 0x80 /* configured as pull-up */
                     255   ; #define Tx1PshPull 0xC0 /* configured as push/pull */
                     256   ; /* output pin configuration for TX0 */
                     257   ; #define OCPOL0_Bit 0x04 /* output polarity control bit */
                     258   ; #define Tx0Float 0x00 /* configured as float */
                     259   ; #define Tx0PullDn 0x08 /* configured as pull-down */
                     260   ; #define Tx0PullUp 0x10 /* configured as pull-up */
                     261   ; #define Tx0PshPull 0x18 /* configured as push/pull */
                     262   ; /* bit definitions for the Clock Divider Register */
                     263   ; #define DivBy1 0x07 /* CLKOUT = oscillator frequency */
                     264   ; #define DivBy2 0x00 /* CLKOUT = 1/2 oscillator frequency */
                     265   ; #define ClkOff_Bit 0x08 /* clock off bit, control of the CLK OUT pin */
                     266   ; #define RXINTEN_Bit 0x20 /* pin TX1 used for receive interrupt */
                     267   ; #define CBP_Bit 0x40 /* CAN comparator bypass control bit */
                     268   ; #define CANMode_Bit 0x80 /* CAN mode definition bit */
                     269   ; /*- definition of used constants ---------------------------------------*/
                     270   ; #define YES 1
                     271   ; #define NO 0
                     272   ; #define ENABLE 1
                     273   ; #define DISABLE 0
                     274   ; #define ENABLE_N 0
                     275   ; #define DISABLE_N 1
                     276   ; #define INTLEVELACT 0
                     277   ; #define INTEDGEACT 1
                     278   ; #define PRIORITY_LOW 0
                     279   ; #define PRIORITY_HIGH 1
                     280   ; /* default (reset) value for register content, clear register */
                     281   ; #define ClrByte 0x00
                     282   ; /* constant: clear Interrupt Enable Register */
                     283   ; #define ClrIntEnSJA ClrByte
                     284   ; /* definitions for the acceptance code and mask register */
                     285   ; #define DontCare 0xFF
                     286   ; /*  bus timing values for
                     287   ; **  bit-rate : 100 kBit/s
                     288   ; **  oscillator frequency : 25 MHz, 1 sample per bit, 0 tolerance %
                     289   ; **  maximum tolerated propagation delay : 4450 ns
                     290   ; **  minimum requested propagation delay : 500 ns
                     291   ; **
                     292   ; **  https://www.kvaser.com/support/calculators/bit-timing-calculator/
                     293   ; **  T1 	T2 	BTQ 	SP% 	SJW 	BIT RATE 	ERR% 	BTR0 	BTR1
                     294   ; **  17	8	25	    68	     1	      100	    0	      04	7f
                     295   ; */
                     296   ; #define SJW 1
                     297   ; #define Presc 10
                     298   ; #define TSEG1 16
                     299   ; #define TSEG2 8
                     300   ; // initialisation for Can controller 0
                     301   ; void Init_CanBus_Controller0(void)
                     302   ; {
                     303   _Init_CanBus_Controller0:
                     304   ; // TODO - put your Canbus initialisation code for CanController 0 here
                     305   ; // See section 4.2.1 in the application note for details (PELICAN MODE)
                     306   ; Can0_InterruptReg = DISABLE; /* disable all interrupts */
0800003E  4239 0050  307          clr.b     5242886
08000042  0006      
                     308   ; /* set reset mode/request (Note: after power-on SJA1000 is in BasicCAN mode)*/
                     309   ; while(Can0_ModeControlReg & RM_RR_Bit == ClrByte){
                     310   ; // Set Request reset mode (other bits remain unchanged)
                     311   ; Can0_ModeControlReg = Can0_ModeControlReg | RM_RR_Bit;
                     312   ; }
                     313   ; // Configure Clock Divider Register
                     314   ; Can0_ClockDivideReg = CANMode_Bit | CBP_Bit | DivBy1;
08000044  13FC 00C7  315          move.b    #199,5242942
08000048  0050 003E 
                     316   ; // Disable Can Interrupts
                     317   ; Can0_InterruptEnReg = ClrIntEnSJA;
0800004C  4239 0050  318          clr.b     5242888
08000050  0008      
                     319   ; // Define Acceptance Code and Mask
                     320   ; Can0_AcceptCode0Reg = ClrByte;
08000052  4239 0050  321          clr.b     5242912
08000056  0020      
                     322   ; Can0_AcceptCode1Reg = ClrByte;
08000058  4239 0050  323          clr.b     5242914
0800005C  0022      
                     324   ; Can0_AcceptCode2Reg = ClrByte;
0800005E  4239 0050  325          clr.b     5242916
08000062  0024      
                     326   ; Can0_AcceptCode3Reg = ClrByte;
08000064  4239 0050  327          clr.b     5242918
08000068  0026      
                     328   ; Can0_AcceptMask0Reg = DontCare;
0800006A  13FC 00FF  329          move.b    #255,5242920
0800006E  0050 0028 
                     330   ; Can0_AcceptMask1Reg = DontCare;
08000072  13FC 00FF  331          move.b    #255,5242922
08000076  0050 002A 
                     332   ; Can0_AcceptMask2Reg = DontCare;
0800007A  13FC 00FF  333          move.b    #255,5242924
0800007E  0050 002C 
                     334   ; Can0_AcceptMask3Reg = DontCare;
08000082  13FC 00FF  335          move.b    #255,5242926
08000086  0050 002E 
                     336   ; // Configure Bus Timing
                     337   ; // Bit-rate = 100 kBit/s @ 25 MHz, bus is sample once
                     338   ; Can0_BusTiming0Reg = SJW | Presc;
0800008A  13FC 000B  339          move.b    #11,5242892
0800008E  0050 000C 
                     340   ; Can0_BusTiming1Reg = TSEG2 | TSEG1;
08000092  13FC 0018  341          move.b    #24,5242894
08000096  0050 000E 
                     342   ; // Configure CAN outputs: float on TX1, Push/Pull on TX0, normal output mode
                     343   ; Can0_OutControlReg = Tx1Float | Tx0PshPull | NormalMode;
0800009A  13FC 001A  344          move.b    #26,5242896
0800009E  0050 0010 
                     345   ; /* leave the reset mode/request i.e. switch to operating mode, 
                     346   ; the interrupts of the S87C654 are enabled but not the CAN interrupts of the SJA1000,
                     347   ; which can be done separately for the different tasks in a system */
                     348   ; /* clear Reset Mode bit, select dual Acceptance Filter Mode,
                     349   ; switch off Self Test Mode and Listen Only Mode, clear Sleep Mode (wake up) */
                     350   ; do /* wait until RM_RR_Bit is cleared */
                     351   Init_CanBus_Controller0_4:
                     352   ; {
                     353   ; Can0_ModeControlReg = ClrByte;
080000A2  4239 0050  354          clr.b     5242880
080000A6  0000      
080000A8  1039 0050  355          move.b    5242880,D0
080000AC  0000      
080000AE  C03C 0001  356          and.b     #1,D0
080000B2  66EE       357          bne       Init_CanBus_Controller0_4
080000B4  4E75       358          rts
                     359   ; } while((Can0_ModeControlReg & RM_RR_Bit ) != ClrByte);
                     360   ; }
                     361   ; // initialisation for Can controller 1
                     362   ; void Init_CanBus_Controller1(void)
                     363   ; {
                     364   _Init_CanBus_Controller1:
                     365   ; // TODO - put your Canbus initialisation code for CanController 1 here
                     366   ; // See section 4.2.1 in the application note for details (PELICAN MODE)
                     367   ; Can1_InterruptReg = DISABLE; /* disable all interrupts */
080000B6  4239 0050  368          clr.b     5243398
080000BA  0206      
                     369   ; /* set reset mode/request (Note: after power-on SJA1000 is in BasicCAN mode)*/
                     370   ; while(Can1_ModeControlReg & RM_RR_Bit == ClrByte){
                     371   ; // Set Request reset mode (other bits remain unchanged)
                     372   ; Can1_ModeControlReg = Can1_ModeControlReg | RM_RR_Bit;
                     373   ; }
                     374   ; // Configure Clock Divider Register
                     375   ; Can1_ClockDivideReg = CANMode_Bit | CBP_Bit | DivBy1;
080000BC  13FC 00C7  376          move.b    #199,5243454
080000C0  0050 023E 
                     377   ; // Disable Can Interrupts
                     378   ; Can1_InterruptEnReg = ClrIntEnSJA;
080000C4  4239 0050  379          clr.b     5243400
080000C8  0208      
                     380   ; // Define Acceptance Code and Mask
                     381   ; Can1_AcceptCode0Reg = ClrByte;
080000CA  4239 0050  382          clr.b     5243424
080000CE  0220      
                     383   ; Can1_AcceptCode1Reg = ClrByte;
080000D0  4239 0050  384          clr.b     5243426
080000D4  0222      
                     385   ; Can1_AcceptCode2Reg = ClrByte;
080000D6  4239 0050  386          clr.b     5243428
080000DA  0224      
                     387   ; Can1_AcceptCode3Reg = ClrByte;
080000DC  4239 0050  388          clr.b     5243430
080000E0  0226      
                     389   ; Can1_AcceptMask0Reg = DontCare;
080000E2  13FC 00FF  390          move.b    #255,5243432
080000E6  0050 0228 
                     391   ; Can1_AcceptMask1Reg = DontCare;
080000EA  13FC 00FF  392          move.b    #255,5243434
080000EE  0050 022A 
                     393   ; Can1_AcceptMask2Reg = DontCare;
080000F2  13FC 00FF  394          move.b    #255,5243436
080000F6  0050 022C 
                     395   ; Can1_AcceptMask3Reg = DontCare;
080000FA  13FC 00FF  396          move.b    #255,5243438
080000FE  0050 022E 
                     397   ; // Configure Bus Timing
                     398   ; // Bit-rate = 100 kBit/s @ 25 MHz, bus is sample once
                     399   ; Can1_BusTiming0Reg = SJW | Presc;
08000102  13FC 000B  400          move.b    #11,5243404
08000106  0050 020C 
                     401   ; Can1_BusTiming1Reg = TSEG2 | TSEG1;
0800010A  13FC 0018  402          move.b    #24,5243406
0800010E  0050 020E 
                     403   ; // Configure CAN outputs: float on TX1, Push/Pull on TX0, normal output mode
                     404   ; Can0_OutControlReg = Tx1Float | Tx0PshPull | NormalMode;
08000112  13FC 001A  405          move.b    #26,5242896
08000116  0050 0010 
                     406   ; /* leave the reset mode/request i.e. switch to operating mode, 
                     407   ; the interrupts of the S87C654 are enabled but not the CAN interrupts of the SJA1000,
                     408   ; which can be done separately for the different tasks in a system */
                     409   ; /* clear Reset Mode bit, select dual Acceptance Filter Mode,
                     410   ; switch off Self Test Mode and Listen Only Mode, clear Sleep Mode (wake up) */
                     411   ; do /* wait until RM_RR_Bit is cleared */
                     412   Init_CanBus_Controller1_4:
                     413   ; {
                     414   ; Can1_ModeControlReg = ClrByte;
0800011A  4239 0050  415          clr.b     5243392
0800011E  0200      
08000120  1039 0050  416          move.b    5243392,D0
08000124  0200      
08000126  C03C 0001  417          and.b     #1,D0
0800012A  66EE       418          bne       Init_CanBus_Controller1_4
                     419   ; } while((Can1_ModeControlReg & RM_RR_Bit ) != ClrByte);
                     420   ; /* disable all interrupts */
                     421   ; Can0_InterruptReg = ClrIntEnSJA;
0800012C  4239 0050  422          clr.b     5242886
08000130  0006      
                     423   ; Can0_InterruptEnReg = ClrIntEnSJA;
08000132  4239 0050  424          clr.b     5242888
08000136  0008      
08000138  4E75       425          rts
                     426   ; }
                     427   ; // Transmit for sending a message via Can controller 0
                     428   ; void CanBus0_Transmit(void)
                     429   ; {
                     430   _CanBus0_Transmit:
0800013A  2F0A       431          move.l    A2,-(A7)
0800013C  45F9 0800  432          lea       _printf.L,A2
08000140  0454      
                     433   ; // TODO - put your Canbus transmit code for CanController 0 here
                     434   ; // See section 4.2.2 in the application note for details (PELICAN MODE)
                     435   ; /* wait until the Transmit Buffer is released */
                     436   ; while((Can0_StatusReg & TBS_Bit ) != TBS_Bit);
                     437   CanBus0_Transmit_1:
08000142  1039 0050  438          move.b    5242884,D0
08000146  0004      
08000148  C03C 0004  439          and.b     #4,D0
0800014C  0C00 0004  440          cmp.b     #4,D0
08000150  6702       441          beq.s     CanBus0_Transmit_3
08000152  60EE       442          bra       CanBus0_Transmit_1
                     443   CanBus0_Transmit_3:
                     444   ; /* Transmit Buffer is released, a message may be written into the buffer */
                     445   ; /* in this example a Standard Frame message shall be transmitted */
                     446   ; Can0_TxFrameInfo = 0x08; /* SFF (data), DLC=8 */
08000154  13FC 0008  447          move.b    #8,5242912
08000158  0050 0020 
                     448   ; Can0_TxBuffer1 = 0xA5; /* ID1 = A0, (0000 0000) */
0800015C  13FC 00A5  449          move.b    #165,5242914
08000160  0050 0022 
                     450   ; Can0_TxBuffer2 = 0x20; /* ID2 = A1, (0010 0000) */
08000164  13FC 0020  451          move.b    #32,5242916
08000168  0050 0024 
                     452   ; Can0_TxBuffer3 = 0x51; /* data1 = DE */
0800016C  13FC 0051  453          move.b    #81,5242918
08000170  0050 0026 
                     454   ; Can0_TxBuffer4 = 0x52; /* data2 = ED */
08000174  13FC 0052  455          move.b    #82,5242920
08000178  0050 0028 
                     456   ; Can0_TxBuffer5 = 0x53; /* data3 = BE */
0800017C  13FC 0053  457          move.b    #83,5242922
08000180  0050 002A 
                     458   ; Can0_TxBuffer6 = 0x54; /* data4 = EF */
08000184  13FC 0054  459          move.b    #84,5242924
08000188  0050 002C 
                     460   ; Can0_TxBuffer7 = 0x55; /* data5 = DE */
0800018C  13FC 0055  461          move.b    #85,5242926
08000190  0050 002E 
                     462   ; Can0_TxBuffer8 = 0x56; /* data6 = AD */
08000194  13FC 0056  463          move.b    #86,5242928
08000198  0050 0030 
                     464   ; Can0_TxBuffer9 = 0x57; /* data7 = BE */
0800019C  13FC 0057  465          move.b    #87,5242930
080001A0  0050 0032 
                     466   ; Can0_TxBuffer10 = 0x58; /* data8 = EF */
080001A4  13FC 0058  467          move.b    #88,5242932
080001A8  0050 0034 
                     468   ; printf("Can0 StatusReg = 0x%X\r\n", Can0_StatusReg);
080001AC  1239 0050  469          move.b    5242884,D1
080001B0  0004      
080001B2  C2BC 0000  470          and.l     #255,D1
080001B6  00FF      
080001B8  2F01       471          move.l    D1,-(A7)
080001BA  4879 0800  472          pea       @canbus~1_1.L
080001BE  0EB8      
080001C0  4E92       473          jsr       (A2)
080001C2  504F       474          addq.w    #8,A7
                     475   ; printf("Can1 StatusReg = 0x%X\r\n", Can1_StatusReg);
080001C4  1239 0050  476          move.b    5243396,D1
080001C8  0204      
080001CA  C2BC 0000  477          and.l     #255,D1
080001CE  00FF      
080001D0  2F01       478          move.l    D1,-(A7)
080001D2  4879 0800  479          pea       @canbus~1_2.L
080001D6  0ED0      
080001D8  4E92       480          jsr       (A2)
080001DA  504F       481          addq.w    #8,A7
                     482   ; printf("Can0_ModeControlReg = 0x%X\r\n", Can0_ModeControlReg);
080001DC  1239 0050  483          move.b    5242880,D1
080001E0  0000      
080001E2  C2BC 0000  484          and.l     #255,D1
080001E6  00FF      
080001E8  2F01       485          move.l    D1,-(A7)
080001EA  4879 0800  486          pea       @canbus~1_3.L
080001EE  0EE8      
080001F0  4E92       487          jsr       (A2)
080001F2  504F       488          addq.w    #8,A7
                     489   ; printf("Can1_ModeControlReg = 0x%X\r\n", Can1_ModeControlReg);
080001F4  1239 0050  490          move.b    5243392,D1
080001F8  0200      
080001FA  C2BC 0000  491          and.l     #255,D1
080001FE  00FF      
08000200  2F01       492          move.l    D1,-(A7)
08000202  4879 0800  493          pea       @canbus~1_4.L
08000206  0F06      
08000208  4E92       494          jsr       (A2)
0800020A  504F       495          addq.w    #8,A7
                     496   ; /* Start the transmission */
                     497   ; Can0_CommandReg = TR_Bit ; /* Set Transmission Request bit */
0800020C  13FC 0001  498          move.b    #1,5242882
08000210  0050 0002 
                     499   ; printf("Can0 StatusReg = 0x%X -- Post Buffer fill up --\r\n", Can0_StatusReg);
08000214  1239 0050  500          move.b    5242884,D1
08000218  0004      
0800021A  C2BC 0000  501          and.l     #255,D1
0800021E  00FF      
08000220  2F01       502          move.l    D1,-(A7)
08000222  4879 0800  503          pea       @canbus~1_5.L
08000226  0F24      
08000228  4E92       504          jsr       (A2)
0800022A  504F       505          addq.w    #8,A7
                     506   ; printf("Can1 StatusReg = 0x%X -- Post Buffer fill up --\r\n", Can1_StatusReg);
0800022C  1239 0050  507          move.b    5243396,D1
08000230  0204      
08000232  C2BC 0000  508          and.l     #255,D1
08000236  00FF      
08000238  2F01       509          move.l    D1,-(A7)
0800023A  4879 0800  510          pea       @canbus~1_6.L
0800023E  0F56      
08000240  4E92       511          jsr       (A2)
08000242  504F       512          addq.w    #8,A7
                     513   ; printf("Can0_ModeControlReg = 0x%X\r\n", Can0_ModeControlReg);
08000244  1239 0050  514          move.b    5242880,D1
08000248  0000      
0800024A  C2BC 0000  515          and.l     #255,D1
0800024E  00FF      
08000250  2F01       516          move.l    D1,-(A7)
08000252  4879 0800  517          pea       @canbus~1_3.L
08000256  0EE8      
08000258  4E92       518          jsr       (A2)
0800025A  504F       519          addq.w    #8,A7
                     520   ; printf("Can1_ModeControlReg = 0x%X\r\n", Can1_ModeControlReg);
0800025C  1239 0050  521          move.b    5243392,D1
08000260  0200      
08000262  C2BC 0000  522          and.l     #255,D1
08000266  00FF      
08000268  2F01       523          move.l    D1,-(A7)
0800026A  4879 0800  524          pea       @canbus~1_4.L
0800026E  0F06      
08000270  4E92       525          jsr       (A2)
08000272  504F       526          addq.w    #8,A7
08000274  245F       527          move.l    (A7)+,A2
08000276  4E75       528          rts
                     529   ; }
                     530   ; // Transmit for sending a message via Can controller 1
                     531   ; void CanBus1_Transmit(void)
                     532   ; {
                     533   _CanBus1_Transmit:
                     534   ; // TODO - put your Canbus transmit code for CanController 1 here
                     535   ; // See section 4.2.2 in the application note for details (PELICAN MODE)
                     536   ; /* wait until the Transmit Buffer is released */
                     537   ; while((Can1_StatusReg & TBS_Bit ) != TBS_Bit);
                     538   CanBus1_Transmit_1:
08000278  1039 0050  539          move.b    5243396,D0
0800027C  0204      
0800027E  C03C 0004  540          and.b     #4,D0
08000282  0C00 0004  541          cmp.b     #4,D0
08000286  6702       542          beq.s     CanBus1_Transmit_3
08000288  60EE       543          bra       CanBus1_Transmit_1
                     544   CanBus1_Transmit_3:
                     545   ; /* Transmit Buffer is released, a message may be written into the buffer */
                     546   ; /* in this example a Standard Frame message shall be transmitted */
                     547   ; Can1_TxFrameInfo = 0x08; /* SFF (data), DLC=8 */
0800028A  13FC 0008  548          move.b    #8,5243424
0800028E  0050 0220 
                     549   ; Can1_TxBuffer1 = 0xA5; /* ID1 = A0, (0000 0000) */
08000292  13FC 00A5  550          move.b    #165,5243426
08000296  0050 0222 
                     551   ; Can1_TxBuffer2 = 0x20; /* ID2 = A1, (0010 0000) */
0800029A  13FC 0020  552          move.b    #32,5243428
0800029E  0050 0224 
                     553   ; Can1_TxBuffer3 = 0x51; /* data1 = DE */
080002A2  13FC 0051  554          move.b    #81,5243430
080002A6  0050 0226 
                     555   ; Can1_TxBuffer4 = 0x52; /* data2 = ED */
080002AA  13FC 0052  556          move.b    #82,5243432
080002AE  0050 0228 
                     557   ; Can1_TxBuffer5 = 0x53; /* data3 = BE */
080002B2  13FC 0053  558          move.b    #83,5243434
080002B6  0050 022A 
                     559   ; Can1_TxBuffer6 = 0x54; /* data4 = EF */
080002BA  13FC 0054  560          move.b    #84,5243436
080002BE  0050 022C 
                     561   ; Can1_TxBuffer7 = 0x55; /* data5 = DE */
080002C2  13FC 0055  562          move.b    #85,5243438
080002C6  0050 022E 
                     563   ; Can1_TxBuffer8 = 0x56; /* data6 = AD */
080002CA  13FC 0056  564          move.b    #86,5243440
080002CE  0050 0230 
                     565   ; Can1_TxBuffer9 = 0x57; /* data7 = BE */
080002D2  13FC 0057  566          move.b    #87,5243442
080002D6  0050 0232 
                     567   ; Can1_TxBuffer10 = 0x58; /* data8 = EF */
080002DA  13FC 0058  568          move.b    #88,5243444
080002DE  0050 0234 
                     569   ; /* Start the transmission */
                     570   ; Can1_CommandReg = TR_Bit ; /* Set Transmission Request bit */
080002E2  13FC 0001  571          move.b    #1,5243394
080002E6  0050 0202 
080002EA  4E75       572          rts
                     573   ; }
                     574   ; // Receive for reading a received message via Can controller 0
                     575   ; void CanBus0_Receive(void)
                     576   ; {
                     577   _CanBus0_Receive:
080002EC  4E56 FFFC  578          link      A6,#-4
                     579   ; // TODO - put your Canbus receive code for CanController 0 here
                     580   ; // See section 4.2.4 in the application note for details (PELICAN MODE)
                     581   ; char recievedByte;
                     582   ; while((Can0_StatusReg & RBS_Bit) != RBS_Bit){
                     583   CanBus0_Receive_1:
080002F0  1039 0050  584          move.b    5242884,D0
080002F4  0004      
080002F6  C03C 0001  585          and.b     #1,D0
080002FA  0C00 0001  586          cmp.b     #1,D0
080002FE  671E       587          beq.s     CanBus0_Receive_3
                     588   ; printf("Can0_StatusReg = 0x%X\r\n", Can0_StatusReg);
08000300  1239 0050  589          move.b    5242884,D1
08000304  0004      
08000306  C2BC 0000  590          and.l     #255,D1
0800030A  00FF      
0800030C  2F01       591          move.l    D1,-(A7)
0800030E  4879 0800  592          pea       @canbus~1_7.L
08000312  0F88      
08000314  4EB9 0800  593          jsr       _printf
08000318  0454      
0800031A  504F       594          addq.w    #8,A7
0800031C  60D2       595          bra       CanBus0_Receive_1
                     596   CanBus0_Receive_3:
                     597   ; };
                     598   ; recievedByte = Can0_RxBuffer1;
0800031E  1D79 0050  599          move.b    5242914,-1(A6)
08000322  0022 FFFF 
                     600   ; Can0_CommandReg = RRB_Bit;
08000326  13FC 0004  601          move.b    #4,5242882
0800032A  0050 0002 
                     602   ; printf("\r\n Recieved Byte @ CanBus0 = %d\r\n", recievedByte);
0800032E  122E FFFF  603          move.b    -1(A6),D1
08000332  4881       604          ext.w     D1
08000334  48C1       605          ext.l     D1
08000336  2F01       606          move.l    D1,-(A7)
08000338  4879 0800  607          pea       @canbus~1_8.L
0800033C  0FA0      
0800033E  4EB9 0800  608          jsr       _printf
08000342  0454      
08000344  504F       609          addq.w    #8,A7
08000346  4E5E       610          unlk      A6
08000348  4E75       611          rts
                     612   ; }
                     613   ; // Receive for reading a received message via Can controller 1
                     614   ; void CanBus1_Receive(void)
                     615   ; {
                     616   _CanBus1_Receive:
0800034A  4E56 FFFC  617          link      A6,#-4
0800034E  2F0A       618          move.l    A2,-(A7)
08000350  45F9 0800  619          lea       _printf.L,A2
08000354  0454      
                     620   ; // TODO - put your Canbus receive code for CanController 1 here
                     621   ; // See section 4.2.4 in the application note for details (PELICAN MODE)
                     622   ; char recievedByte;
                     623   ; while((Can1_StatusReg & RBS_Bit) != RBS_Bit){
                     624   CanBus1_Receive_1:
08000356  1039 0050  625          move.b    5243396,D0
0800035A  0204      
0800035C  C03C 0001  626          and.b     #1,D0
08000360  0C00 0001  627          cmp.b     #1,D0
08000364  6732       628          beq.s     CanBus1_Receive_3
                     629   ; printf("Can0_StatusReg = 0x%X\r\n", Can0_StatusReg);
08000366  1239 0050  630          move.b    5242884,D1
0800036A  0004      
0800036C  C2BC 0000  631          and.l     #255,D1
08000370  00FF      
08000372  2F01       632          move.l    D1,-(A7)
08000374  4879 0800  633          pea       @canbus~1_7.L
08000378  0F88      
0800037A  4E92       634          jsr       (A2)
0800037C  504F       635          addq.w    #8,A7
                     636   ; printf("Can1_StatusReg = 0x%X\r\n", Can1_StatusReg);
0800037E  1239 0050  637          move.b    5243396,D1
08000382  0204      
08000384  C2BC 0000  638          and.l     #255,D1
08000388  00FF      
0800038A  2F01       639          move.l    D1,-(A7)
0800038C  4879 0800  640          pea       @canbus~1_9.L
08000390  0FC2      
08000392  4E92       641          jsr       (A2)
08000394  504F       642          addq.w    #8,A7
08000396  60BE       643          bra       CanBus1_Receive_1
                     644   CanBus1_Receive_3:
                     645   ; };
                     646   ; recievedByte = Can1_RxBuffer1;
08000398  1D79 0050  647          move.b    5243426,-1(A6)
0800039C  0222 FFFF 
                     648   ; Can1_CommandReg = RRB_Bit;
080003A0  13FC 0004  649          move.b    #4,5243394
080003A4  0050 0202 
                     650   ; printf("\r\n Recieved Byte @ CanBus1 = %d\r\n", recievedByte);
080003A8  122E FFFF  651          move.b    -1(A6),D1
080003AC  4881       652          ext.w     D1
080003AE  48C1       653          ext.l     D1
080003B0  2F01       654          move.l    D1,-(A7)
080003B2  4879 0800  655          pea       @canbus~1_10.L
080003B6  0FDA      
080003B8  4E92       656          jsr       (A2)
080003BA  504F       657          addq.w    #8,A7
080003BC  245F       658          move.l    (A7)+,A2
080003BE  4E5E       659          unlk      A6
080003C0  4E75       660          rts
                     661   ; }
                     662   ; void CanBusTest(void)
                     663   ; {
                     664   _CanBusTest:
                     665   ; // initialise the two Can controllers
                     666   ; Init_CanBus_Controller0();
080003C2  4EB9 0800  667          jsr       _Init_CanBus_Controller0
080003C6  003E      
                     668   ; Init_CanBus_Controller1();
080003C8  4EB9 0800  669          jsr       _Init_CanBus_Controller1
080003CC  00B6      
                     670   ; printf("\r\n\r\n---- CANBUS Test ----\r\n") ;
080003CE  4879 0800  671          pea       @canbus~1_11.L
080003D2  0FFC      
080003D4  4EB9 0800  672          jsr       _printf
080003D8  0454      
080003DA  584F       673          addq.w    #4,A7
                     674   ; // simple application to alternately transmit and receive messages from each of two nodes
                     675   ; // while(1)    {
                     676   ; // delay();                    // write a routine to delay say 1/2 second so we don't flood the network with messages too quickly
                     677   ; CanBus0_Transmit() ;       // transmit a message via Controller 0
080003DC  4EB9 0800  678          jsr       _CanBus0_Transmit
080003E0  013A      
                     679   ; printf("I am here 1 \r\n");
080003E2  4879 0800  680          pea       @canbus~1_12.L
080003E6  1018      
080003E8  4EB9 0800  681          jsr       _printf
080003EC  0454      
080003EE  584F       682          addq.w    #4,A7
080003F0  4E75       683          rts
                     684   ; // CanBus1_Receive() ;        // receive a message via Controller 1 (and display it)
                     685   ; // printf("I am here 2 \r\n");
                     686   ; // printf("\r\n") ;
                     687   ; //delay();                    // write a routine to delay say 1/2 second so we don't flood the network with messages too quickly
                     688   ; // CanBus1_Transmit() ;        // transmit a message via Controller 1
                     689   ; // printf("I am here 3 \r\n");
                     690   ; // CanBus0_Receive() ;         // receive a message via Controller 0 (and display it)
                     691   ; // printf("I am here 4 \r\n");
                     692   ; // printf("\r\n") ;
                     693   ; // }
                     694   ; }
                     695   ; int _getch( void )
                     696   ; {
                     697   __getch:
080003F2  4E56 FFFC  698          link      A6,#-4
                     699   ; char c ;
                     700   ; while((RS232_Status & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     701   _getch_1:
080003F6  1039 0040  702          move.b    4194368,D0
080003FA  0040      
080003FC  C03C 0001  703          and.b     #1,D0
08000400  0C00 0001  704          cmp.b     #1,D0
08000404  6702       705          beq.s     _getch_3
08000406  60EE       706          bra       _getch_1
                     707   _getch_3:
                     708   ; ;
                     709   ; return (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
08000408  1039 0040  710          move.b    4194370,D0
0800040C  0042      
0800040E  C0BC 0000  711          and.l     #255,D0
08000412  00FF      
08000414  C0BC 0000  712          and.l     #127,D0
08000418  007F      
0800041A  4E5E       713          unlk      A6
0800041C  4E75       714          rts
                     715   ; }
                     716   ; int _putch( int c)
                     717   ; {
                     718   __putch:
0800041E  4E56 0000  719          link      A6,#0
                     720   ; while((RS232_Status & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     721   _putch_1:
08000422  1039 0040  722          move.b    4194368,D0
08000426  0040      
08000428  C03C 0002  723          and.b     #2,D0
0800042C  0C00 0002  724          cmp.b     #2,D0
08000430  6702       725          beq.s     _putch_3
08000432  60EE       726          bra       _putch_1
                     727   _putch_3:
                     728   ; ;
                     729   ; RS232_TxData = (c & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
08000434  202E 0008  730          move.l    8(A6),D0
08000438  C0BC 0000  731          and.l     #127,D0
0800043C  007F      
0800043E  13C0 0040  732          move.b    D0,4194370
08000442  0042      
                     733   ; return c ;                                              // putchar() expects the character to be returned
08000444  202E 0008  734          move.l    8(A6),D0
08000448  4E5E       735          unlk      A6
0800044A  4E75       736          rts
                     737   ; }
                     738   ; void main(void){
                     739   _main:
                     740   ; CanBusTest();
0800044C  4EB9 0800  741          jsr       _CanBusTest
08000450  03C2      
                     742   ; while(1);
                     743   main_1:
08000452  60FE       744          bra       main_1
                     745   ; }
                     746   _printf:
08000454  4E56 FFFC  747          link      A6,#-4
08000458  2F02       748          move.l    D2,-(A7)
0800045A  41EE 0008  749          lea       8(A6),A0
0800045E  5848       750          addq.w    #4,A0
08000460  2408       751          move.l    A0,D2
08000462  2F02       752          move.l    D2,-(A7)
08000464  2F2E 0008  753          move.l    8(A6),-(A7)
08000468  42A7       754          clr.l     -(A7)
0800046A  4EB9 0800  755          jsr       _doprint
0800046E  052C      
08000470  DEFC 000C  756          add.w     #12,A7
08000474  2D40 FFFC  757          move.l    D0,-4(A6)
08000478  4282       758          clr.l     D2
0800047A  202E FFFC  759          move.l    -4(A6),D0
0800047E  241F       760          move.l    (A7)+,D2
08000480  4E5E       761          unlk      A6
08000482  4E75       762          rts
                     763   @doprint_copy:
08000484  4E56 0000  764          link      A6,#0
08000488  206E 0008  765          move.l    8(A6),A0
0800048C  4A90       766          tst.l     (A0)
0800048E  6710       767          beq.s     @doprint_copy_1
08000490  202E 000C  768          move.l    12(A6),D0
08000494  206E 0008  769          move.l    8(A6),A0
08000498  2250       770          move.l    (A0),A1
0800049A  5290       771          addq.l    #1,(A0)
0800049C  1280       772          move.b    D0,(A1)
0800049E  600C       773          bra.s     @doprint_copy_2
                     774   @doprint_copy_1:
080004A0  2F2E 000C  775          move.l    12(A6),-(A7)
080004A4  4EB9 0800  776          jsr       _putch
080004A8  0D7E      
080004AA  584F       777          addq.w    #4,A7
                     778   @doprint_copy_2:
080004AC  4E5E       779          unlk      A6
080004AE  4E75       780          rts
                     781   @doprint_getval:
080004B0  4E56 0000  782          link      A6,#0
080004B4  48E7 3000  783          movem.l   D2/D3,-(A7)
080004B8  262E 0008  784          move.l    8(A6),D3
080004BC  4282       785          clr.l     D2
080004BE  2043       786          move.l    D3,A0
080004C0  2050       787          move.l    (A0),A0
080004C2  1010       788          move.b    (A0),D0
080004C4  0C00 002A  789          cmp.b     #42,D0
080004C8  6612       790          bne.s     @doprint_getval_1
080004CA  206E 000C  791          move.l    12(A6),A0
080004CE  2250       792          move.l    (A0),A1
080004D0  5890       793          addq.l    #4,(A0)
080004D2  2411       794          move.l    (A1),D2
080004D4  2043       795          move.l    D3,A0
080004D6  5290       796          addq.l    #1,(A0)
080004D8  6000 0048  797          bra       @doprint_getval_5
                     798   @doprint_getval_1:
080004DC  7001       799          moveq     #1,D0
080004DE  2043       800          move.l    D3,A0
080004E0  2050       801          move.l    (A0),A0
080004E2  1210       802          move.b    (A0),D1
080004E4  4881       803          ext.w     D1
080004E6  48C1       804          ext.l     D1
080004E8  D081       805          add.l     D1,D0
080004EA  41F9 0800  806          lea       __ctype.L,A0
080004EE  1034      
080004F0  1030 0800  807          move.b    0(A0,D0.L),D0
080004F4  C03C 0004  808          and.b     #4,D0
080004F8  6728       809          beq.s     @doprint_getval_5
080004FA  2F02       810          move.l    D2,-(A7)
080004FC  4878 000A  811          pea       10
08000500  4EB9 0800  812          jsr       LMUL
08000504  0CDE      
08000506  2017       813          move.l    (A7),D0
08000508  504F       814          addq.w    #8,A7
0800050A  2043       815          move.l    D3,A0
0800050C  2250       816          move.l    (A0),A1
0800050E  5290       817          addq.l    #1,(A0)
08000510  1211       818          move.b    (A1),D1
08000512  4881       819          ext.w     D1
08000514  48C1       820          ext.l     D1
08000516  D081       821          add.l     D1,D0
08000518  0480 0000  822          sub.l     #48,D0
0800051C  0030      
0800051E  2400       823          move.l    D0,D2
08000520  60BA       824          bra       @doprint_getval_1
                     825   @doprint_getval_5:
08000522  2002       826          move.l    D2,D0
08000524  4CDF 000C  827          movem.l   (A7)+,D2/D3
08000528  4E5E       828          unlk      A6
0800052A  4E75       829          rts
                     830   _doprint:
0800052C  4E56 FFCC  831          link      A6,#-52
08000530  48E7 3F3C  832          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000534  45EE 0008  833          lea       8(A6),A2
08000538  47F9 0800  834          lea       @doprint_copy.L,A3
0800053C  0484      
0800053E  49F9 0800  835          lea       _ultoa.L,A4
08000542  0C66      
08000544  4286       836          clr.l     D6
                     837   doprint_1:
08000546  206E 000C  838          move.l    12(A6),A0
0800054A  4A10       839          tst.b     (A0)
0800054C  6700 05F0  840          beq       doprint_3
08000550  206E 000C  841          move.l    12(A6),A0
08000554  1010       842          move.b    (A0),D0
08000556  0C00 0025  843          cmp.b     #37,D0
0800055A  671C       844          beq.s     doprint_4
0800055C  206E 000C  845          move.l    12(A6),A0
08000560  52AE 000C  846          addq.l    #1,12(A6)
08000564  1210       847          move.b    (A0),D1
08000566  4881       848          ext.w     D1
08000568  48C1       849          ext.l     D1
0800056A  2F01       850          move.l    D1,-(A7)
0800056C  2F0A       851          move.l    A2,-(A7)
0800056E  4E93       852          jsr       (A3)
08000570  504F       853          addq.w    #8,A7
08000572  5286       854          addq.l    #1,D6
08000574  6000 05C4  855          bra       doprint_2
                     856   doprint_4:
08000578  52AE 000C  857          addq.l    #1,12(A6)
0800057C  422E FFD3  858          clr.b     -45(A6)
08000580  422E FFD2  859          clr.b     -46(A6)
08000584  422E FFD0  860          clr.b     -48(A6)
08000588  422E FFCF  861          clr.b     -49(A6)
0800058C  422E FFCE  862          clr.b     -50(A6)
08000590  422E FFCD  863          clr.b     -51(A6)
08000594  42AE FFFC  864          clr.l     -4(A6)
08000598  7AFF       865          moveq     #-1,D5
0800059A  41EE FFDC  866          lea       -36(A6),A0
0800059E  2608       867          move.l    A0,D3
080005A0  2408       868          move.l    A0,D2
                     869   doprint_6:
080005A2  206E 000C  870          move.l    12(A6),A0
080005A6  1010       871          move.b    (A0),D0
080005A8  4880       872          ext.w     D0
080005AA  48C0       873          ext.l     D0
080005AC  0C80 0000  874          cmp.l     #43,D0
080005B0  002B      
080005B2  6730       875          beq.s     doprint_12
080005B4  6E18       876          bgt.s     doprint_15
080005B6  0C80 0000  877          cmp.l     #35,D0
080005BA  0023      
080005BC  6700 003E  878          beq       doprint_14
080005C0  6E00 0046  879          bgt       doprint_9
080005C4  0C80 0000  880          cmp.l     #32,D0
080005C8  0020      
080005CA  6724       881          beq.s     doprint_13
080005CC  603A       882          bra.s     doprint_9
                     883   doprint_15:
080005CE  0C80 0000  884          cmp.l     #45,D0
080005D2  002D      
080005D4  6702       885          beq.s     doprint_11
080005D6  6030       886          bra.s     doprint_9
                     887   doprint_11:
080005D8  1D7C 0001  888          move.b    #1,-51(A6)
080005DC  FFCD      
080005DE  52AE 000C  889          addq.l    #1,12(A6)
080005E2  6026       890          bra.s     doprint_7
                     891   doprint_12:
080005E4  1D7C 0001  892          move.b    #1,-50(A6)
080005E8  FFCE      
080005EA  52AE 000C  893          addq.l    #1,12(A6)
080005EE  601A       894          bra.s     doprint_7
                     895   doprint_13:
080005F0  1D7C 0001  896          move.b    #1,-49(A6)
080005F4  FFCF      
080005F6  52AE 000C  897          addq.l    #1,12(A6)
080005FA  600E       898          bra.s     doprint_7
                     899   doprint_14:
080005FC  1D7C 0001  900          move.b    #1,-48(A6)
08000600  FFD0      
08000602  52AE 000C  901          addq.l    #1,12(A6)
08000606  6002       902          bra.s     doprint_7
                     903   doprint_9:
08000608  6002       904          bra.s     doprint_8
                     905   doprint_7:
0800060A  6096       906          bra       doprint_6
                     907   doprint_8:
0800060C  206E 000C  908          move.l    12(A6),A0
08000610  1010       909          move.b    (A0),D0
08000612  0C00 0030  910          cmp.b     #48,D0
08000616  660A       911          bne.s     doprint_16
08000618  52AE 000C  912          addq.l    #1,12(A6)
0800061C  1D7C 0001  913          move.b    #1,-46(A6)
08000620  FFD2      
                     914   doprint_16:
08000622  486E 0010  915          pea       16(A6)
08000626  486E 000C  916          pea       12(A6)
0800062A  4EB9 0800  917          jsr       @doprint_getval
0800062E  04B0      
08000630  504F       918          addq.w    #8,A7
08000632  2A40       919          move.l    D0,A5
08000634  206E 000C  920          move.l    12(A6),A0
08000638  1010       921          move.b    (A0),D0
0800063A  0C00 002E  922          cmp.b     #46,D0
0800063E  6616       923          bne.s     doprint_18
08000640  52AE 000C  924          addq.l    #1,12(A6)
08000644  486E 0010  925          pea       16(A6)
08000648  486E 000C  926          pea       12(A6)
0800064C  4EB9 0800  927          jsr       @doprint_getval
08000650  04B0      
08000652  504F       928          addq.w    #8,A7
08000654  2A00       929          move.l    D0,D5
                     930   doprint_18:
08000656  206E 000C  931          move.l    12(A6),A0
0800065A  1010       932          move.b    (A0),D0
0800065C  0C00 006C  933          cmp.b     #108,D0
08000660  660A       934          bne.s     doprint_20
08000662  52AE 000C  935          addq.l    #1,12(A6)
08000666  1D7C 0001  936          move.b    #1,-45(A6)
0800066A  FFD3      
                     937   doprint_20:
0800066C  206E 000C  938          move.l    12(A6),A0
08000670  1010       939          move.b    (A0),D0
08000672  4880       940          ext.w     D0
08000674  48C0       941          ext.l     D0
08000676  0C80 0000  942          cmp.l     #111,D0
0800067A  006F      
0800067C  6700 00D8  943          beq       doprint_27
08000680  6E34       944          bgt.s     doprint_33
08000682  0C80 0000  945          cmp.l     #100,D0
08000686  0064      
08000688  6700 0054  946          beq       doprint_24
0800068C  6E1C       947          bgt.s     doprint_34
0800068E  0C80 0000  948          cmp.l     #99,D0
08000692  0063      
08000694  6700 0130  949          beq       doprint_30
08000698  6E00 0174  950          bgt       doprint_22
0800069C  0C80 0000  951          cmp.l     #88,D0
080006A0  0058      
080006A2  6700 00EA  952          beq       doprint_28
080006A6  6000 0166  953          bra       doprint_22
                     954   doprint_34:
080006AA  0C80 0000  955          cmp.l     #105,D0
080006AE  0069      
080006B0  672C       956          beq.s     doprint_24
080006B2  6000 015A  957          bra       doprint_22
                     958   doprint_33:
080006B6  0C80 0000  959          cmp.l     #117,D0
080006BA  0075      
080006BC  6700 0060  960          beq       doprint_26
080006C0  6E0E       961          bgt.s     doprint_35
080006C2  0C80 0000  962          cmp.l     #115,D0
080006C6  0073      
080006C8  6700 0124  963          beq       doprint_31
080006CC  6000 0140  964          bra       doprint_22
                     965   doprint_35:
080006D0  0C80 0000  966          cmp.l     #120,D0
080006D4  0078      
080006D6  6700 00B6  967          beq       doprint_28
080006DA  6000 0132  968          bra       doprint_22
                     969   doprint_24:
080006DE  4A2E FFD3  970          tst.b     -45(A6)
080006E2  671C       971          beq.s     doprint_36
080006E4  4878 000A  972          pea       10
080006E8  2F03       973          move.l    D3,-(A7)
080006EA  206E 0010  974          move.l    16(A6),A0
080006EE  58AE 0010  975          addq.l    #4,16(A6)
080006F2  2F10       976          move.l    (A0),-(A7)
080006F4  4EB9 0800  977          jsr       _ltoa
080006F8  0BDE      
080006FA  DEFC 000C  978          add.w     #12,A7
080006FE  601A       979          bra.s     doprint_37
                     980   doprint_36:
08000700  4878 000A  981          pea       10
08000704  2F03       982          move.l    D3,-(A7)
08000706  206E 0010  983          move.l    16(A6),A0
0800070A  58AE 0010  984          addq.l    #4,16(A6)
0800070E  2F10       985          move.l    (A0),-(A7)
08000710  4EB9 0800  986          jsr       _ltoa
08000714  0BDE      
08000716  DEFC 000C  987          add.w     #12,A7
                     988   doprint_37:
0800071A  6000 0100  989          bra       doprint_23
                     990   doprint_26:
0800071E  4A2E FFD3  991          tst.b     -45(A6)
08000722  6718       992          beq.s     doprint_38
08000724  4878 000A  993          pea       10
08000728  2F03       994          move.l    D3,-(A7)
0800072A  206E 0010  995          move.l    16(A6),A0
0800072E  58AE 0010  996          addq.l    #4,16(A6)
08000732  2F10       997          move.l    (A0),-(A7)
08000734  4E94       998          jsr       (A4)
08000736  DEFC 000C  999          add.w     #12,A7
0800073A  6016      1000          bra.s     doprint_39
                    1001   doprint_38:
0800073C  4878 000A 1002          pea       10
08000740  2F03      1003          move.l    D3,-(A7)
08000742  206E 0010 1004          move.l    16(A6),A0
08000746  58AE 0010 1005          addq.l    #4,16(A6)
0800074A  2F10      1006          move.l    (A0),-(A7)
0800074C  4E94      1007          jsr       (A4)
0800074E  DEFC 000C 1008          add.w     #12,A7
                    1009   doprint_39:
08000752  6000 00C8 1010          bra       doprint_23
                    1011   doprint_27:
08000756  4A2E FFD3 1012          tst.b     -45(A6)
0800075A  6718      1013          beq.s     doprint_40
0800075C  4878 0008 1014          pea       8
08000760  2F03      1015          move.l    D3,-(A7)
08000762  206E 0010 1016          move.l    16(A6),A0
08000766  58AE 0010 1017          addq.l    #4,16(A6)
0800076A  2F10      1018          move.l    (A0),-(A7)
0800076C  4E94      1019          jsr       (A4)
0800076E  DEFC 000C 1020          add.w     #12,A7
08000772  6016      1021          bra.s     doprint_41
                    1022   doprint_40:
08000774  4878 0008 1023          pea       8
08000778  2F03      1024          move.l    D3,-(A7)
0800077A  206E 0010 1025          move.l    16(A6),A0
0800077E  58AE 0010 1026          addq.l    #4,16(A6)
08000782  2F10      1027          move.l    (A0),-(A7)
08000784  4E94      1028          jsr       (A4)
08000786  DEFC 000C 1029          add.w     #12,A7
                    1030   doprint_41:
0800078A  6000 0090 1031          bra       doprint_23
                    1032   doprint_28:
0800078E  4A2E FFD3 1033          tst.b     -45(A6)
08000792  6718      1034          beq.s     doprint_42
08000794  4878 0010 1035          pea       16
08000798  2F03      1036          move.l    D3,-(A7)
0800079A  206E 0010 1037          move.l    16(A6),A0
0800079E  58AE 0010 1038          addq.l    #4,16(A6)
080007A2  2F10      1039          move.l    (A0),-(A7)
080007A4  4E94      1040          jsr       (A4)
080007A6  DEFC 000C 1041          add.w     #12,A7
080007AA  6016      1042          bra.s     doprint_43
                    1043   doprint_42:
080007AC  4878 0010 1044          pea       16
080007B0  2F03      1045          move.l    D3,-(A7)
080007B2  206E 0010 1046          move.l    16(A6),A0
080007B6  58AE 0010 1047          addq.l    #4,16(A6)
080007BA  2F10      1048          move.l    (A0),-(A7)
080007BC  4E94      1049          jsr       (A4)
080007BE  DEFC 000C 1050          add.w     #12,A7
                    1051   doprint_43:
080007C2  6000 0058 1052          bra       doprint_23
                    1053   doprint_30:
080007C6  206E 0010 1054          move.l    16(A6),A0
080007CA  58AE 0010 1055          addq.l    #4,16(A6)
080007CE  2010      1056          move.l    (A0),D0
080007D0  2042      1057          move.l    D2,A0
080007D2  5282      1058          addq.l    #1,D2
080007D4  1080      1059          move.b    D0,(A0)
080007D6  2042      1060          move.l    D2,A0
080007D8  4210      1061          clr.b     (A0)
080007DA  200D      1062          move.l    A5,D0
080007DC  6704      1063          beq.s     doprint_44
080007DE  200D      1064          move.l    A5,D0
080007E0  6006      1065          bra.s     doprint_45
                    1066   doprint_44:
080007E2  7001      1067          moveq     #1,D0
080007E4  4880      1068          ext.w     D0
080007E6  48C0      1069          ext.l     D0
                    1070   doprint_45:
080007E8  2A00      1071          move.l    D0,D5
080007EA  6000 0030 1072          bra       doprint_23
                    1073   doprint_31:
080007EE  206E 0010 1074          move.l    16(A6),A0
080007F2  58AE 0010 1075          addq.l    #4,16(A6)
080007F6  2610      1076          move.l    (A0),D3
080007F8  0C85 FFFF 1077          cmp.l     #-1,D5
080007FC  FFFF      
080007FE  660C      1078          bne.s     doprint_46
08000800  2F03      1079          move.l    D3,-(A7)
08000802  4EB9 0800 1080          jsr       _strlen
08000806  0D6C      
08000808  584F      1081          addq.w    #4,A7
0800080A  2A00      1082          move.l    D0,D5
                    1083   doprint_46:
0800080C  600E      1084          bra.s     doprint_23
                    1085   doprint_22:
0800080E  206E 000C 1086          move.l    12(A6),A0
08000812  2242      1087          move.l    D2,A1
08000814  5282      1088          addq.l    #1,D2
08000816  1290      1089          move.b    (A0),(A1)
08000818  2042      1090          move.l    D2,A0
0800081A  4210      1091          clr.b     (A0)
                    1092   doprint_23:
0800081C  2F03      1093          move.l    D3,-(A7)
0800081E  4EB9 0800 1094          jsr       _strlen
08000822  0D6C      
08000824  584F      1095          addq.w    #4,A7
08000826  1800      1096          move.b    D0,D4
08000828  206E 000C 1097          move.l    12(A6),A0
0800082C  1010      1098          move.b    (A0),D0
0800082E  0C00 0073 1099          cmp.b     #115,D0
08000832  661C      1100          bne.s     doprint_48
08000834  0C85 0000 1101          cmp.l     #0,D5
08000838  0000      
0800083A  6D14      1102          blt.s     doprint_48
0800083C  4884      1103          ext.w     D4
0800083E  48C4      1104          ext.l     D4
08000840  B885      1105          cmp.l     D5,D4
08000842  6F04      1106          ble.s     doprint_50
08000844  2005      1107          move.l    D5,D0
08000846  6006      1108          bra.s     doprint_51
                    1109   doprint_50:
08000848  1004      1110          move.b    D4,D0
0800084A  4880      1111          ext.w     D0
0800084C  48C0      1112          ext.l     D0
                    1113   doprint_51:
0800084E  1800      1114          move.b    D0,D4
                    1115   doprint_48:
08000850  206E 000C 1116          move.l    12(A6),A0
08000854  1010      1117          move.b    (A0),D0
08000856  0C00 0058 1118          cmp.b     #88,D0
0800085A  6600 0028 1119          bne       doprint_56
0800085E  41EE FFDC 1120          lea       -36(A6),A0
08000862  2408      1121          move.l    A0,D2
                    1122   doprint_54:
08000864  2042      1123          move.l    D2,A0
08000866  4A10      1124          tst.b     (A0)
08000868  671A      1125          beq.s     doprint_56
0800086A  2042      1126          move.l    D2,A0
0800086C  1210      1127          move.b    (A0),D1
0800086E  4881      1128          ext.w     D1
08000870  48C1      1129          ext.l     D1
08000872  2F01      1130          move.l    D1,-(A7)
08000874  4EB9 0800 1131          jsr       _toupper
08000878  0DAE      
0800087A  584F      1132          addq.w    #4,A7
0800087C  2042      1133          move.l    D2,A0
0800087E  1080      1134          move.b    D0,(A0)
08000880  5282      1135          addq.l    #1,D2
08000882  60E0      1136          bra       doprint_54
                    1137   doprint_56:
08000884  7E00      1138          moveq     #0,D7
08000886  41EE FFD4 1139          lea       -44(A6),A0
0800088A  2408      1140          move.l    A0,D2
0800088C  206E 000C 1141          move.l    12(A6),A0
08000890  1010      1142          move.b    (A0),D0
08000892  0C00 0064 1143          cmp.b     #100,D0
08000896  670E      1144          beq.s     doprint_59
08000898  206E 000C 1145          move.l    12(A6),A0
0800089C  1010      1146          move.b    (A0),D0
0800089E  0C00 0069 1147          cmp.b     #105,D0
080008A2  6600 0068 1148          bne       doprint_65
                    1149   doprint_59:
080008A6  102E FFCE 1150          move.b    -50(A6),D0
080008AA  4880      1151          ext.w     D0
080008AC  48C0      1152          ext.l     D0
080008AE  4A80      1153          tst.l     D0
080008B0  660C      1154          bne.s     doprint_62
080008B2  2043      1155          move.l    D3,A0
080008B4  1010      1156          move.b    (A0),D0
080008B6  0C00 002D 1157          cmp.b     #45,D0
080008BA  6600 0028 1158          bne       doprint_60
                    1159   doprint_62:
080008BE  2043      1160          move.l    D3,A0
080008C0  1010      1161          move.b    (A0),D0
080008C2  0C00 002D 1162          cmp.b     #45,D0
080008C6  660E      1163          bne.s     doprint_63
080008C8  2043      1164          move.l    D3,A0
080008CA  5283      1165          addq.l    #1,D3
080008CC  2242      1166          move.l    D2,A1
080008CE  5282      1167          addq.l    #1,D2
080008D0  1290      1168          move.b    (A0),(A1)
080008D2  5304      1169          subq.b    #1,D4
080008D4  6008      1170          bra.s     doprint_64
                    1171   doprint_63:
080008D6  2042      1172          move.l    D2,A0
080008D8  5282      1173          addq.l    #1,D2
080008DA  10BC 002B 1174          move.b    #43,(A0)
                    1175   doprint_64:
080008DE  5287      1176          addq.l    #1,D7
080008E0  6000 002A 1177          bra       doprint_65
                    1178   doprint_60:
080008E4  4A2E FFCF 1179          tst.b     -49(A6)
080008E8  6722      1180          beq.s     doprint_65
080008EA  2043      1181          move.l    D3,A0
080008EC  1010      1182          move.b    (A0),D0
080008EE  0C00 002D 1183          cmp.b     #45,D0
080008F2  660E      1184          bne.s     doprint_67
080008F4  2043      1185          move.l    D3,A0
080008F6  5283      1186          addq.l    #1,D3
080008F8  2242      1187          move.l    D2,A1
080008FA  5282      1188          addq.l    #1,D2
080008FC  1290      1189          move.b    (A0),(A1)
080008FE  5304      1190          subq.b    #1,D4
08000900  6008      1191          bra.s     doprint_68
                    1192   doprint_67:
08000902  2042      1193          move.l    D2,A0
08000904  5282      1194          addq.l    #1,D2
08000906  10BC 0020 1195          move.b    #32,(A0)
                    1196   doprint_68:
0800090A  5287      1197          addq.l    #1,D7
                    1198   doprint_65:
0800090C  4A2E FFD0 1199          tst.b     -48(A6)
08000910  6700 005A 1200          beq       doprint_77
08000914  206E 000C 1201          move.l    12(A6),A0
08000918  1010      1202          move.b    (A0),D0
0800091A  4880      1203          ext.w     D0
0800091C  48C0      1204          ext.l     D0
0800091E  0C80 0000 1205          cmp.l     #111,D0
08000922  006F      
08000924  671A      1206          beq.s     doprint_73
08000926  6E0C      1207          bgt.s     doprint_76
08000928  0C80 0000 1208          cmp.l     #88,D0
0800092C  0058      
0800092E  6710      1209          beq.s     doprint_73
08000930  6000 003A 1210          bra       doprint_77
                    1211   doprint_76:
08000934  0C80 0000 1212          cmp.l     #120,D0
08000938  0078      
0800093A  6704      1213          beq.s     doprint_73
0800093C  6000 002E 1214          bra       doprint_77
                    1215   doprint_73:
08000940  2042      1216          move.l    D2,A0
08000942  5282      1217          addq.l    #1,D2
08000944  10BC 0030 1218          move.b    #48,(A0)
08000948  5287      1219          addq.l    #1,D7
0800094A  206E 000C 1220          move.l    12(A6),A0
0800094E  1010      1221          move.b    (A0),D0
08000950  0C00 0078 1222          cmp.b     #120,D0
08000954  670C      1223          beq.s     doprint_79
08000956  206E 000C 1224          move.l    12(A6),A0
0800095A  1010      1225          move.b    (A0),D0
0800095C  0C00 0058 1226          cmp.b     #88,D0
08000960  660A      1227          bne.s     doprint_77
                    1228   doprint_79:
08000962  2042      1229          move.l    D2,A0
08000964  5282      1230          addq.l    #1,D2
08000966  10BC 0078 1231          move.b    #120,(A0)
0800096A  5287      1232          addq.l    #1,D7
                    1233   doprint_77:
0800096C  2042      1234          move.l    D2,A0
0800096E  4210      1235          clr.b     (A0)
08000970  206E 000C 1236          move.l    12(A6),A0
08000974  1010      1237          move.b    (A0),D0
08000976  4880      1238          ext.w     D0
08000978  48C0      1239          ext.l     D0
0800097A  0C80 0000 1240          cmp.l     #105,D0
0800097E  0069      
08000980  6700 0076 1241          beq       doprint_82
08000984  6E42      1242          bgt.s     doprint_93
08000986  0C80 0000 1243          cmp.l     #99,D0
0800098A  0063      
0800098C  6700 0084 1244          beq       doprint_96
08000990  6E1C      1245          bgt.s     doprint_94
08000992  0C80 0000 1246          cmp.l     #88,D0
08000996  0058      
08000998  6700 005E 1247          beq       doprint_82
0800099C  6E00 0184 1248          bgt       doprint_80
080009A0  0C80 0000 1249          cmp.l     #69,D0
080009A4  0045      
080009A6  6700 0050 1250          beq       doprint_82
080009AA  6000 0176 1251          bra       doprint_80
                    1252   doprint_94:
080009AE  0C80 0000 1253          cmp.l     #101,D0
080009B2  0065      
080009B4  6700 0042 1254          beq       doprint_82
080009B8  6E00 0168 1255          bgt       doprint_80
080009BC  0C80 0000 1256          cmp.l     #100,D0
080009C0  0064      
080009C2  6734      1257          beq.s     doprint_82
080009C4  6000 015C 1258          bra       doprint_80
                    1259   doprint_93:
080009C8  0C80 0000 1260          cmp.l     #117,D0
080009CC  0075      
080009CE  6728      1261          beq.s     doprint_82
080009D0  6E1A      1262          bgt.s     doprint_95
080009D2  0C80 0000 1263          cmp.l     #115,D0
080009D6  0073      
080009D8  6700 0038 1264          beq       doprint_96
080009DC  6E00 0144 1265          bgt       doprint_80
080009E0  0C80 0000 1266          cmp.l     #111,D0
080009E4  006F      
080009E6  6710      1267          beq.s     doprint_82
080009E8  6000 0138 1268          bra       doprint_80
                    1269   doprint_95:
080009EC  0C80 0000 1270          cmp.l     #120,D0
080009F0  0078      
080009F2  6704      1271          beq.s     doprint_82
080009F4  6000 012C 1272          bra       doprint_80
                    1273   doprint_82:
080009F8  4A2E FFD2 1274          tst.b     -46(A6)
080009FC  6714      1275          beq.s     doprint_96
080009FE  4A2E FFCD 1276          tst.b     -51(A6)
08000A02  660E      1277          bne.s     doprint_96
08000A04  200D      1278          move.l    A5,D0
08000A06  9087      1279          sub.l     D7,D0
08000A08  4884      1280          ext.w     D4
08000A0A  48C4      1281          ext.l     D4
08000A0C  9084      1282          sub.l     D4,D0
08000A0E  2D40 FFFC 1283          move.l    D0,-4(A6)
                    1284   doprint_96:
08000A12  202E FFFC 1285          move.l    -4(A6),D0
08000A16  0C80 0000 1286          cmp.l     #0,D0
08000A1A  0000      
08000A1C  6C04      1287          bge.s     doprint_98
08000A1E  42AE FFFC 1288          clr.l     -4(A6)
                    1289   doprint_98:
08000A22  4A2E FFCD 1290          tst.b     -51(A6)
08000A26  6600 0030 1291          bne       doprint_104
08000A2A  1004      1292          move.b    D4,D0
08000A2C  4880      1293          ext.w     D0
08000A2E  48C0      1294          ext.l     D0
08000A30  D0AE FFFC 1295          add.l     -4(A6),D0
08000A34  D087      1296          add.l     D7,D0
08000A36  1D40 FFD1 1297          move.b    D0,-47(A6)
                    1298   doprint_102:
08000A3A  102E FFD1 1299          move.b    -47(A6),D0
08000A3E  4880      1300          ext.w     D0
08000A40  48C0      1301          ext.l     D0
08000A42  220D      1302          move.l    A5,D1
08000A44  534D      1303          subq.w    #1,A5
08000A46  B081      1304          cmp.l     D1,D0
08000A48  6C0E      1305          bge.s     doprint_104
08000A4A  4878 0020 1306          pea       32
08000A4E  2F0A      1307          move.l    A2,-(A7)
08000A50  4E93      1308          jsr       (A3)
08000A52  504F      1309          addq.w    #8,A7
08000A54  5286      1310          addq.l    #1,D6
08000A56  60E2      1311          bra       doprint_102
                    1312   doprint_104:
08000A58  41EE FFD4 1313          lea       -44(A6),A0
08000A5C  2408      1314          move.l    A0,D2
                    1315   doprint_105:
08000A5E  2042      1316          move.l    D2,A0
08000A60  4A10      1317          tst.b     (A0)
08000A62  6716      1318          beq.s     doprint_107
08000A64  2042      1319          move.l    D2,A0
08000A66  5282      1320          addq.l    #1,D2
08000A68  1210      1321          move.b    (A0),D1
08000A6A  4881      1322          ext.w     D1
08000A6C  48C1      1323          ext.l     D1
08000A6E  2F01      1324          move.l    D1,-(A7)
08000A70  2F0A      1325          move.l    A2,-(A7)
08000A72  4E93      1326          jsr       (A3)
08000A74  504F      1327          addq.w    #8,A7
08000A76  5286      1328          addq.l    #1,D6
08000A78  60E4      1329          bra       doprint_105
                    1330   doprint_107:
08000A7A  202E FFFC 1331          move.l    -4(A6),D0
08000A7E  1D40 FFD1 1332          move.b    D0,-47(A6)
                    1333   doprint_108:
08000A82  102E FFD1 1334          move.b    -47(A6),D0
08000A86  532E FFD1 1335          subq.b    #1,-47(A6)
08000A8A  4A00      1336          tst.b     D0
08000A8C  670E      1337          beq.s     doprint_110
08000A8E  4878 0030 1338          pea       48
08000A92  2F0A      1339          move.l    A2,-(A7)
08000A94  4E93      1340          jsr       (A3)
08000A96  504F      1341          addq.w    #8,A7
08000A98  5286      1342          addq.l    #1,D6
08000A9A  60E6      1343          bra       doprint_108
                    1344   doprint_110:
08000A9C  2043      1345          move.l    D3,A0
08000A9E  4A10      1346          tst.b     (A0)
08000AA0  6700 0048 1347          beq       doprint_113
08000AA4  206E 000C 1348          move.l    12(A6),A0
08000AA8  1010      1349          move.b    (A0),D0
08000AAA  4880      1350          ext.w     D0
08000AAC  48C0      1351          ext.l     D0
08000AAE  0C80 0000 1352          cmp.l     #115,D0
08000AB2  0073      
08000AB4  670C      1353          beq.s     doprint_116
08000AB6  6E18      1354          bgt.s     doprint_119
08000AB8  0C80 0000 1355          cmp.l     #99,D0
08000ABC  0063      
08000ABE  6702      1356          beq.s     doprint_116
08000AC0  600E      1357          bra.s     doprint_119
                    1358   doprint_116:
08000AC2  2005      1359          move.l    D5,D0
08000AC4  5385      1360          subq.l    #1,D5
08000AC6  0C80 0000 1361          cmp.l     #0,D0
08000ACA  0000      
08000ACC  6E02      1362          bgt.s     doprint_119
08000ACE  6016      1363          bra.s     doprint_115
                    1364   doprint_119:
08000AD0  2043      1365          move.l    D3,A0
08000AD2  5283      1366          addq.l    #1,D3
08000AD4  1210      1367          move.b    (A0),D1
08000AD6  4881      1368          ext.w     D1
08000AD8  48C1      1369          ext.l     D1
08000ADA  2F01      1370          move.l    D1,-(A7)
08000ADC  2F0A      1371          move.l    A2,-(A7)
08000ADE  4E93      1372          jsr       (A3)
08000AE0  504F      1373          addq.w    #8,A7
08000AE2  5286      1374          addq.l    #1,D6
08000AE4  6002      1375          bra.s     doprint_112
                    1376   doprint_115:
08000AE6  6002      1377          bra.s     doprint_113
                    1378   doprint_112:
08000AE8  60B2      1379          bra       doprint_110
                    1380   doprint_113:
08000AEA  4A2E FFCD 1381          tst.b     -51(A6)
08000AEE  6700 0030 1382          beq       doprint_125
08000AF2  1004      1383          move.b    D4,D0
08000AF4  4880      1384          ext.w     D0
08000AF6  48C0      1385          ext.l     D0
08000AF8  D0AE FFFC 1386          add.l     -4(A6),D0
08000AFC  D087      1387          add.l     D7,D0
08000AFE  1D40 FFD1 1388          move.b    D0,-47(A6)
                    1389   doprint_123:
08000B02  102E FFD1 1390          move.b    -47(A6),D0
08000B06  4880      1391          ext.w     D0
08000B08  48C0      1392          ext.l     D0
08000B0A  220D      1393          move.l    A5,D1
08000B0C  534D      1394          subq.w    #1,A5
08000B0E  B081      1395          cmp.l     D1,D0
08000B10  6C0E      1396          bge.s     doprint_125
08000B12  4878 0020 1397          pea       32
08000B16  2F0A      1398          move.l    A2,-(A7)
08000B18  4E93      1399          jsr       (A3)
08000B1A  504F      1400          addq.w    #8,A7
08000B1C  5386      1401          subq.l    #1,D6
08000B1E  60E2      1402          bra       doprint_123
                    1403   doprint_125:
08000B20  6014      1404          bra.s     doprint_81
                    1405   doprint_80:
08000B22  206E 000C 1406          move.l    12(A6),A0
08000B26  1210      1407          move.b    (A0),D1
08000B28  4881      1408          ext.w     D1
08000B2A  48C1      1409          ext.l     D1
08000B2C  2F01      1410          move.l    D1,-(A7)
08000B2E  2F0A      1411          move.l    A2,-(A7)
08000B30  4E93      1412          jsr       (A3)
08000B32  504F      1413          addq.w    #8,A7
08000B34  5286      1414          addq.l    #1,D6
                    1415   doprint_81:
08000B36  52AE 000C 1416          addq.l    #1,12(A6)
                    1417   doprint_2:
08000B3A  6000 FA0A 1418          bra       doprint_1
                    1419   doprint_3:
08000B3E  4A92      1420          tst.l     (A2)
08000B40  6710      1421          beq.s     doprint_126
08000B42  4201      1422          clr.b     D1
08000B44  C2BC 0000 1423          and.l     #255,D1
08000B48  00FF      
08000B4A  2F01      1424          move.l    D1,-(A7)
08000B4C  2F0A      1425          move.l    A2,-(A7)
08000B4E  4E93      1426          jsr       (A3)
08000B50  504F      1427          addq.w    #8,A7
                    1428   doprint_126:
08000B52  2006      1429          move.l    D6,D0
08000B54  4CDF 3CFC 1430          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08000B58  4E5E      1431          unlk      A6
08000B5A  4E75      1432          rts
                    1433   @itoa_convert:
08000B5C  4E56 0000 1434          link      A6,#0
08000B60  48E7 3C00 1435          movem.l   D2/D3/D4/D5,-(A7)
08000B64  242E 0008 1436          move.l    8(A6),D2
08000B68  262E 0010 1437          move.l    16(A6),D3
08000B6C  2A2E 000C 1438          move.l    12(A6),D5
08000B70  2F05      1439          move.l    D5,-(A7)
08000B72  2F03      1440          move.l    D3,-(A7)
08000B74  4EB9 0800 1441          jsr       ULDIV
08000B78  0DDA      
08000B7A  202F 0004 1442          move.l    4(A7),D0
08000B7E  504F      1443          addq.w    #8,A7
08000B80  2800      1444          move.l    D0,D4
08000B82  BA83      1445          cmp.l     D3,D5
08000B84  6520      1446          blo.s     @itoa_convert_1
08000B86  2F03      1447          move.l    D3,-(A7)
08000B88  2F05      1448          move.l    D5,-(A7)
08000B8A  2F03      1449          move.l    D3,-(A7)
08000B8C  4EB9 0800 1450          jsr       ULDIV
08000B90  0DDA      
08000B92  2217      1451          move.l    (A7),D1
08000B94  504F      1452          addq.w    #8,A7
08000B96  2F01      1453          move.l    D1,-(A7)
08000B98  2F02      1454          move.l    D2,-(A7)
08000B9A  4EB9 0800 1455          jsr       @itoa_convert
08000B9E  0B5C      
08000BA0  DEFC 000C 1456          add.w     #12,A7
08000BA4  2400      1457          move.l    D0,D2
                    1458   @itoa_convert_1:
08000BA6  0C84 0000 1459          cmp.l     #9,D4
08000BAA  0009      
08000BAC  6E0E      1460          bgt.s     @itoa_convert_3
08000BAE  2004      1461          move.l    D4,D0
08000BB0  7230      1462          moveq     #48,D1
08000BB2  C2BC 0000 1463          and.l     #255,D1
08000BB6  00FF      
08000BB8  D081      1464          add.l     D1,D0
08000BBA  6012      1465          bra.s     @itoa_convert_4
                    1466   @itoa_convert_3:
08000BBC  2004      1467          move.l    D4,D0
08000BBE  7261      1468          moveq     #97,D1
08000BC0  C2BC 0000 1469          and.l     #255,D1
08000BC4  00FF      
08000BC6  D081      1470          add.l     D1,D0
08000BC8  0480 0000 1471          sub.l     #10,D0
08000BCC  000A      
                    1472   @itoa_convert_4:
08000BCE  2042      1473          move.l    D2,A0
08000BD0  1080      1474          move.b    D0,(A0)
08000BD2  2002      1475          move.l    D2,D0
08000BD4  5280      1476          addq.l    #1,D0
08000BD6  4CDF 003C 1477          movem.l   (A7)+,D2/D3/D4/D5
08000BDA  4E5E      1478          unlk      A6
08000BDC  4E75      1479          rts
                    1480   _ltoa:
08000BDE  4E56 0000 1481          link      A6,#0
08000BE2  48E7 3C00 1482          movem.l   D2/D3/D4/D5,-(A7)
08000BE6  242E 0008 1483          move.l    8(A6),D2
08000BEA  262E 000C 1484          move.l    12(A6),D3
08000BEE  2A2E 0010 1485          move.l    16(A6),D5
08000BF2  2803      1486          move.l    D3,D4
08000BF4  0C85 0000 1487          cmp.l     #2,D5
08000BF8  0002      
08000BFA  6D08      1488          blt.s     ltoa_3
08000BFC  0C85 0000 1489          cmp.l     #36,D5
08000C00  0024      
08000C02  6F06      1490          ble.s     ltoa_1
                    1491   ltoa_3:
08000C04  2003      1492          move.l    D3,D0
08000C06  6000 0056 1493          bra       ltoa_4
                    1494   ltoa_1:
08000C0A  0C85 0000 1495          cmp.l     #10,D5
08000C0E  000A      
08000C10  6600 0034 1496          bne       ltoa_5
08000C14  0C82 0000 1497          cmp.l     #0,D2
08000C18  0000      
08000C1A  6C2A      1498          bge.s     ltoa_5
08000C1C  2002      1499          move.l    D2,D0
08000C1E  4480      1500          neg.l     D0
08000C20  2400      1501          move.l    D0,D2
08000C22  0C82 0000 1502          cmp.l     #0,D2
08000C26  0000      
08000C28  6C14      1503          bge.s     ltoa_7
08000C2A  4879 0800 1504          pea       @itoa_1.L
08000C2E  1028      
08000C30  2F03      1505          move.l    D3,-(A7)
08000C32  4EB9 0800 1506          jsr       _strcpy
08000C36  0DCA      
08000C38  504F      1507          addq.w    #8,A7
08000C3A  2003      1508          move.l    D3,D0
08000C3C  6020      1509          bra.s     ltoa_4
                    1510   ltoa_7:
08000C3E  2044      1511          move.l    D4,A0
08000C40  5284      1512          addq.l    #1,D4
08000C42  10BC 002D 1513          move.b    #45,(A0)
                    1514   ltoa_5:
08000C46  2F05      1515          move.l    D5,-(A7)
08000C48  2F02      1516          move.l    D2,-(A7)
08000C4A  2F04      1517          move.l    D4,-(A7)
08000C4C  4EB9 0800 1518          jsr       @itoa_convert
08000C50  0B5C      
08000C52  DEFC 000C 1519          add.w     #12,A7
08000C56  2800      1520          move.l    D0,D4
08000C58  2044      1521          move.l    D4,A0
08000C5A  4210      1522          clr.b     (A0)
08000C5C  2003      1523          move.l    D3,D0
                    1524   ltoa_4:
08000C5E  4CDF 003C 1525          movem.l   (A7)+,D2/D3/D4/D5
08000C62  4E5E      1526          unlk      A6
08000C64  4E75      1527          rts
                    1528   _ultoa:
08000C66  4E56 0000 1529          link      A6,#0
08000C6A  48E7 3800 1530          movem.l   D2/D3/D4,-(A7)
08000C6E  262E 0010 1531          move.l    16(A6),D3
08000C72  282E 000C 1532          move.l    12(A6),D4
08000C76  2404      1533          move.l    D4,D2
08000C78  0C83 0000 1534          cmp.l     #2,D3
08000C7C  0002      
08000C7E  6D08      1535          blt.s     ultoa_3
08000C80  0C83 0000 1536          cmp.l     #36,D3
08000C84  0024      
08000C86  6F04      1537          ble.s     ultoa_1
                    1538   ultoa_3:
08000C88  2004      1539          move.l    D4,D0
08000C8A  601A      1540          bra.s     ultoa_4
                    1541   ultoa_1:
08000C8C  2F03      1542          move.l    D3,-(A7)
08000C8E  2F2E 0008 1543          move.l    8(A6),-(A7)
08000C92  2F02      1544          move.l    D2,-(A7)
08000C94  4EB9 0800 1545          jsr       @itoa_convert
08000C98  0B5C      
08000C9A  DEFC 000C 1546          add.w     #12,A7
08000C9E  2400      1547          move.l    D0,D2
08000CA0  2042      1548          move.l    D2,A0
08000CA2  4210      1549          clr.b     (A0)
08000CA4  2004      1550          move.l    D4,D0
                    1551   ultoa_4:
08000CA6  4CDF 001C 1552          movem.l   (A7)+,D2/D3/D4
08000CAA  4E5E      1553          unlk      A6
08000CAC  4E75      1554          rts
                    1555   _itoa:
08000CAE  4E56 0000 1556          link      A6,#0
08000CB2  2F2E 0010 1557          move.l    16(A6),-(A7)
08000CB6  2F2E 000C 1558          move.l    12(A6),-(A7)
08000CBA  2F2E 0008 1559          move.l    8(A6),-(A7)
08000CBE  4EB9 0800 1560          jsr       _ltoa
08000CC2  0BDE      
08000CC4  DEFC 000C 1561          add.w     #12,A7
08000CC8  4E5E      1562          unlk      A6
08000CCA  4E75      1563          rts
                    1564   ULMUL:
08000CCC  4E56 0000 1565          link    A6,#0
08000CD0  48E7 C000 1566          movem.l D0/D1,-(A7)
08000CD4  222E 0008 1567          move.l  8(A6),D1
08000CD8  202E 000C 1568          move.l  12(A6),D0
08000CDC  602C      1569          bra.s   lmul_3
                    1570   LMUL:
08000CDE  4E56 0000 1571          link    A6,#0
08000CE2  48E7 C000 1572          movem.l D0/D1,-(A7)
08000CE6  222E 0008 1573          move.l  8(A6),D1
08000CEA  202E 000C 1574          move.l  12(A6),D0
08000CEE  4A80      1575          tst.l   D0
08000CF0  6A0A      1576          bpl.s   lmul_1
08000CF2  4480      1577          neg.l   D0
08000CF4  4A81      1578          tst.l   D1
08000CF6  6A0A      1579          bpl.s   lmul_2
08000CF8  4481      1580          neg.l   D1
08000CFA  600E      1581          bra.s   lmul_3
                    1582   lmul_1:
08000CFC  4A81      1583          tst.l   D1
08000CFE  6A0A      1584          bpl.s   lmul_3
08000D00  4481      1585          neg.l   D1
                    1586   lmul_2:
08000D02  6114      1587          bsr.s   domul
08000D04  4481      1588          neg.l   D1
08000D06  4080      1589          negx.l  D0
08000D08  6002      1590          bra.s   lmul_4
                    1591   lmul_3:
08000D0A  610C      1592          bsr.s   domul
                    1593   lmul_4:
08000D0C  2D41 0008 1594          move.l  D1,8(A6)
08000D10  4CDF 0003 1595          movem.l (A7)+,D0/D1
08000D14  4E5E      1596          unlk    A6
08000D16  4E75      1597          rts
                    1598   domul:
08000D18  0C81 0000 1599          cmpi.l  #$FFFF,D1
08000D1C  FFFF      
08000D1E  620C      1600          bhi.s   domul_1
08000D20  0C80 0000 1601          cmpi.l  #$FFFF,D0
08000D24  FFFF      
08000D26  620E      1602          bhi.s   domul_2
08000D28  C2C0      1603          mulu    D0,D1
08000D2A  4E75      1604          rts
                    1605   domul_1:
08000D2C  0C80 0000 1606          cmpi.l  #$FFFF,D0
08000D30  FFFF      
08000D32  6218      1607          bhi.s   domul_4
08000D34  6002      1608          bra.s   domul_3
                    1609   domul_2
08000D36  C141      1610          exg     D0,D1
                    1611   domul_3:
08000D38  2F02      1612          move.l  D2,-(A7)
08000D3A  2401      1613          move.l  D1,D2
08000D3C  4842      1614          swap    D2
08000D3E  C2C0      1615          mulu    D0,D1
08000D40  C4C0      1616          mulu    D0,D2
08000D42  4842      1617          swap    D2
08000D44  4242      1618          clr.w   D2
08000D46  D282      1619          add.l   D2,D1
08000D48  241F      1620          move.l  (A7)+,D2
08000D4A  4E75      1621          rts
                    1622   domul_4:
08000D4C  48E7 3000 1623          movem.l D2/D3,-(A7)
08000D50  2401      1624          move.l  D1,D2
08000D52  2601      1625          move.l  D1,D3
08000D54  C2C0      1626          mulu    D0,D1
08000D56  4842      1627          swap    D2
08000D58  C4C0      1628          mulu    D0,D2
08000D5A  4840      1629          swap    D0
08000D5C  C6C0      1630          mulu    D0,D3
08000D5E  D483      1631          add.l   D3,D2
08000D60  4842      1632          swap    D2
08000D62  4242      1633          clr.w   D2
08000D64  D282      1634          add.l   D2,D1
08000D66  4CDF 000C 1635          movem.l (A7)+,D2/D3
08000D6A  4E75      1636          rts
                    1637   _strlen:
08000D6C  206F 0004 1638          move.l    (4,A7),A0
08000D70  2248      1639          move.l    A0,A1
                    1640   strlen_1:
08000D72  4A19      1641          tst.b     (A1)+
08000D74  66FC      1642          bne       strlen_1
08000D76  2009      1643          move.l    A1,D0
08000D78  9088      1644          sub.l     A0,D0
08000D7A  5380      1645          subq.l    #1,D0
08000D7C  4E75      1646          rts
                    1647   _putch:
08000D7E  4E56 0000 1648          link      A6,#0
08000D82  2F02      1649          move.l    D2,-(A7)
08000D84  242E 0008 1650          move.l    8(A6),D2
08000D88  0C82 0000 1651          cmp.l     #10,D2
08000D8C  000A      
08000D8E  660C      1652          bne.s     putch_1
08000D90  4878 000D 1653          pea       13
08000D94  4EB9 0800 1654          jsr       __putch
08000D98  041E      
08000D9A  584F      1655          addq.w    #4,A7
                    1656   putch_1:
08000D9C  2F02      1657          move.l    D2,-(A7)
08000D9E  4EB9 0800 1658          jsr       __putch
08000DA2  041E      
08000DA4  584F      1659          addq.w    #4,A7
08000DA6  2002      1660          move.l    D2,D0
08000DA8  241F      1661          move.l    (A7)+,D2
08000DAA  4E5E      1662          unlk      A6
08000DAC  4E75      1663          rts
                    1664   _toupper:
08000DAE  202F 0004 1665          move.l    4(A7),D0
08000DB2  0C80 0000 1666          cmp.l     #'a',D0
08000DB6  0061      
08000DB8  6D0E      1667          blt.s     toupper_1
08000DBA  0C80 0000 1668          cmp.l     #'z',D0
08000DBE  007A      
08000DC0  6E06      1669          bgt.s     toupper_1
08000DC2  0480 0000 1670          sub.l     #$20,D0
08000DC6  0020      
                    1671   toupper_1:
08000DC8  4E75      1672          rts
                    1673   _strcpy:
08000DCA  206F 0004 1674          move.l    (4,A7),A0
08000DCE  226F 0008 1675          move.l    (8,A7),A1
08000DD2  2008      1676          move.l    A0,D0
                    1677   strcpy_1:
08000DD4  10D9      1678          move.b    (A1)+,(A0)+
08000DD6  66FC      1679          bne.s     strcpy_1
08000DD8  4E75      1680          rts
                    1681   ULDIV:
08000DDA  4E56 0000 1682          link    A6,#0
08000DDE  48E7 C000 1683          movem.l D0/D1,-(A7)
08000DE2  222E 0008 1684          move.l  8(A6),D1
08000DE6  202E 000C 1685          move.l  12(A6),D0
08000DEA  6036      1686          bra.s   ldiv_3
                    1687   LDIV:
08000DEC  4E56 0000 1688          link    A6,#0
08000DF0  48E7 C000 1689          movem.l D0/D1,-(A7)
08000DF4  222E 0008 1690          move.l  8(A6),D1
08000DF8  202E 000C 1691          move.l  12(A6),D0
08000DFC  4A80      1692          tst.l   D0
08000DFE  6A0E      1693          bpl.s   ldiv_1
08000E00  4480      1694          neg.l   D0
08000E02  4A81      1695          tst.l   D1
08000E04  6A14      1696          bpl.s   ldiv_2
08000E06  4481      1697          neg.l   D1
08000E08  612A      1698          bsr.s   dodiv
08000E0A  4481      1699          neg.l   D1
08000E0C  6016      1700          bra.s   ldiv_4
                    1701   ldiv_1:
08000E0E  4A81      1702          tst.l   D1
08000E10  6A10      1703          bpl.s   ldiv_3
08000E12  4481      1704          neg.l   D1
08000E14  611E      1705          bsr.s   dodiv
08000E16  4480      1706          neg.l   D0
08000E18  600A      1707          bra.s   ldiv_4
                    1708   ldiv_2:
08000E1A  6118      1709          bsr.s   dodiv
08000E1C  4480      1710          neg.l   D0
08000E1E  4481      1711          neg.l   D1
08000E20  6002      1712          bra.s   ldiv_4
                    1713   ldiv_3:
08000E22  6110      1714          bsr.s   dodiv
                    1715   ldiv_4:
08000E24  2D40 0008 1716          move.l  D0,8(A6)
08000E28  2D41 000C 1717          move.l  D1,12(A6)
08000E2C  4CDF 0003 1718          movem.l (A7)+,D0/D1
08000E30  4E5E      1719          unlk    A6
08000E32  4E75      1720          rts
                    1721   dodiv:
08000E34  0C81 0000 1722          cmpi.l  #$FFFF,D1
08000E38  FFFF      
08000E3A  6236      1723          bhi.s   dodiv_2
08000E3C  0C80 0000 1724          cmpi.l  #$FFFF,D0
08000E40  FFFF      
08000E42  6210      1725          bhi.s   dodiv_1
08000E44  80C1      1726          divu    D1,D0
08000E46  2200      1727          move.l  D0,D1
08000E48  4241      1728          clr.w   D1
08000E4A  4841      1729          swap    D1
08000E4C  0280 0000 1730          andi.l  #$FFFF,D0
08000E50  FFFF      
08000E52  4E75      1731          rts
                    1732   dodiv_1:
08000E54  48A7 A000 1733          movem.w D0/D2,-(A7)
08000E58  4240      1734          clr.w   D0
08000E5A  4840      1735          swap    D0
08000E5C  80C1      1736          divu    D1,D0
08000E5E  3400      1737          move.w  D0,D2
08000E60  301F      1738          move.w  (A7)+,D0
08000E62  80C1      1739          divu    D1,D0
08000E64  4840      1740          swap    D0
08000E66  4281      1741          clr.l   D1
08000E68  3200      1742          move.w  D0,D1
08000E6A  3002      1743          move.w  D2,D0
08000E6C  4840      1744          swap    D0
08000E6E  341F      1745          move.w  (A7)+,D2
08000E70  4E75      1746          rts
                    1747   dodiv_2:
08000E72  48E7 3800 1748          movem.l D2/D3/D4,-(A7)
08000E76  2401      1749          move.l  D1,D2
08000E78  4242      1750          clr.w   D2
08000E7A  4842      1751          swap    D2
08000E7C  5282      1752          addq.l  #1,D2
08000E7E  2600      1753          move.l  D0,D3
08000E80  2801      1754          move.l  D1,D4
08000E82  2202      1755          move.l  D2,D1
08000E84  61CE      1756          bsr.s   dodiv_1
08000E86  2204      1757          move.l  D4,D1
08000E88  82C2      1758          divu    D2,D1
08000E8A  80C1      1759          divu    D1,D0
08000E8C  0280 0000 1760          andi.l  #$FFFF,D0
08000E90  FFFF      
                    1761   dodiv_3:
08000E92  2204      1762          move.l  D4,D1
08000E94  2404      1763          move.l  D4,D2
08000E96  4842      1764          swap    D2
08000E98  C2C0      1765          mulu    D0,D1
08000E9A  C4C0      1766          mulu    D0,D2
08000E9C  4842      1767          swap    D2
08000E9E  D282      1768          add.l   D2,D1
08000EA0  9283      1769          sub.l   D3,D1
08000EA2  620A      1770          bhi.s   dodiv_4
08000EA4  4481      1771          neg.l   D1
08000EA6  B881      1772          cmp.l   D1,D4
08000EA8  6208      1773          bhi.s   dodiv_5
08000EAA  5280      1774          addq.l  #1,D0
08000EAC  60E4      1775          bra.s   dodiv_3
                    1776   dodiv_4:
08000EAE  5380      1777          subq.l  #1,D0
08000EB0  60E0      1778          bra.s   dodiv_3
                    1779   dodiv_5:
08000EB2  4CDF 001C 1780          movem.l (A7)+,D2/D3/D4
08000EB6  4E75      1781          rts
                    1782          section   const
08000EB8            1783                   align
                    1784   
                    1785   
                    1786   @canbus~1_1:
08000EB8  4361 6E30 1787          dc.b      67,97,110,48,32,83,116,97,116,117,115,82,101
08000EBC  2053 7461 
08000EC0  7475 7352 
08000EC4  65        
08000EC5  6720 3D20 1788          dc.b      103,32,61,32,48,120,37,88,13,10,0
08000EC9  3078 2558 
08000ECD  0D0A 00   
                    1789   @canbus~1_2:
08000ED0  4361 6E31 1790          dc.b      67,97,110,49,32,83,116,97,116,117,115,82,101
08000ED4  2053 7461 
08000ED8  7475 7352 
08000EDC  65        
08000EDD  6720 3D20 1791          dc.b      103,32,61,32,48,120,37,88,13,10,0
08000EE1  3078 2558 
08000EE5  0D0A 00   
                    1792   @canbus~1_3:
08000EE8  4361 6E30 1793          dc.b      67,97,110,48,95,77,111,100,101,67,111,110,116
08000EEC  5F4D 6F64 
08000EF0  6543 6F6E 
08000EF4  74        
08000EF5  726F 6C52 1794          dc.b      114,111,108,82,101,103,32,61,32,48,120,37,88
08000EF9  6567 203D 
08000EFD  2030 7825 
08000F01  58        
08000F02  0D0A 00   1795          dc.b      13,10,0
                    1796   @canbus~1_4:
08000F06  4361 6E31 1797          dc.b      67,97,110,49,95,77,111,100,101,67,111,110,116
08000F0A  5F4D 6F64 
08000F0E  6543 6F6E 
08000F12  74        
08000F13  726F 6C52 1798          dc.b      114,111,108,82,101,103,32,61,32,48,120,37,88
08000F17  6567 203D 
08000F1B  2030 7825 
08000F1F  58        
08000F20  0D0A 00   1799          dc.b      13,10,0
                    1800   @canbus~1_5:
08000F24  4361 6E30 1801          dc.b      67,97,110,48,32,83,116,97,116,117,115,82,101
08000F28  2053 7461 
08000F2C  7475 7352 
08000F30  65        
08000F31  6720 3D20 1802          dc.b      103,32,61,32,48,120,37,88,32,45,45,32,80,111
08000F35  3078 2558 
08000F39  202D 2D20 
08000F3D  506F      
08000F3F  7374 2042 1803          dc.b      115,116,32,66,117,102,102,101,114,32,102,105
08000F43  7566 6665 
08000F47  7220 6669 
08000F4B  6C6C 2075 1804          dc.b      108,108,32,117,112,32,45,45,13,10,0
08000F4F  7020 2D2D 
08000F53  0D0A 00   
                    1805   @canbus~1_6:
08000F56  4361 6E31 1806          dc.b      67,97,110,49,32,83,116,97,116,117,115,82,101
08000F5A  2053 7461 
08000F5E  7475 7352 
08000F62  65        
08000F63  6720 3D20 1807          dc.b      103,32,61,32,48,120,37,88,32,45,45,32,80,111
08000F67  3078 2558 
08000F6B  202D 2D20 
08000F6F  506F      
08000F71  7374 2042 1808          dc.b      115,116,32,66,117,102,102,101,114,32,102,105
08000F75  7566 6665 
08000F79  7220 6669 
08000F7D  6C6C 2075 1809          dc.b      108,108,32,117,112,32,45,45,13,10,0
08000F81  7020 2D2D 
08000F85  0D0A 00   
                    1810   @canbus~1_7:
08000F88  4361 6E30 1811          dc.b      67,97,110,48,95,83,116,97,116,117,115,82,101
08000F8C  5F53 7461 
08000F90  7475 7352 
08000F94  65        
08000F95  6720 3D20 1812          dc.b      103,32,61,32,48,120,37,88,13,10,0
08000F99  3078 2558 
08000F9D  0D0A 00   
                    1813   @canbus~1_8:
08000FA0  0D0A 2052 1814          dc.b      13,10,32,82,101,99,105,101,118,101,100,32,66
08000FA4  6563 6965 
08000FA8  7665 6420 
08000FAC  42        
08000FAD  7974 6520 1815          dc.b      121,116,101,32,64,32,67,97,110,66,117,115,48
08000FB1  4020 4361 
08000FB5  6E42 7573 
08000FB9  30        
08000FBA  203D 2025 1816          dc.b      32,61,32,37,100,13,10,0
08000FBE  640D 0A00 
                    1817   @canbus~1_9:
08000FC2  4361 6E31 1818          dc.b      67,97,110,49,95,83,116,97,116,117,115,82,101
08000FC6  5F53 7461 
08000FCA  7475 7352 
08000FCE  65        
08000FCF  6720 3D20 1819          dc.b      103,32,61,32,48,120,37,88,13,10,0
08000FD3  3078 2558 
08000FD7  0D0A 00   
                    1820   @canbus~1_10:
08000FDA  0D0A 2052 1821          dc.b      13,10,32,82,101,99,105,101,118,101,100,32,66
08000FDE  6563 6965 
08000FE2  7665 6420 
08000FE6  42        
08000FE7  7974 6520 1822          dc.b      121,116,101,32,64,32,67,97,110,66,117,115,49
08000FEB  4020 4361 
08000FEF  6E42 7573 
08000FF3  31        
08000FF4  203D 2025 1823          dc.b      32,61,32,37,100,13,10,0
08000FF8  640D 0A00 
                    1824   @canbus~1_11:
08000FFC  0D0A 0D0A 1825          dc.b      13,10,13,10,45,45,45,45,32,67,65,78,66,85,83
08001000  2D2D 2D2D 
08001004  2043 414E 
08001008  4255 53   
0800100B  2054 6573 1826          dc.b      32,84,101,115,116,32,45,45,45,45,13,10,0
0800100F  7420 2D2D 
08001013  2D2D 0D0A 
08001017  00        
                    1827   @canbus~1_12:
08001018  4920 616D 1828          dc.b      73,32,97,109,32,104,101,114,101,32,49,32,13
0800101C  2068 6572 
08001020  6520 3120 
08001024  0D        
08001025  0A00      1829          dc.b      10,0
                    1830   @itoa_1:
08001028  2D32 3134 1831          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
0800102C  3734 3833 
08001030  3634 3800 
                    1832   __ctype:
08001034  0040 4040 1833          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08001038  4040 4040 
0800103C  4040 5050 
08001040  5050 50   
08001043  4040 4040 1834          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
08001047  4040 4040 
0800104B  4040 4040 
0800104F  4040 40   
08001052  4040 40D0 1835          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
08001056  A0A0 A0A0 
0800105A  A0A0 A0A0 
0800105E  A0A0 A0A0 1836          dc.b      160,160,160,160,160,160,160,140,140,140,140
08001062  A0A0 A08C 
08001066  8C8C 8C   
08001069  8C8C 8C8C 1837          dc.b      140,140,140,140,140,140,160,160,160,160,160
0800106D  8C8C A0A0 
08001071  A0A0 A0   
08001074  A0A0 8A8A 1838          dc.b      160,160,138,138,138,138,138,138,130,130,130
08001078  8A8A 8A8A 
0800107C  8282 82   
0800107F  8282 8282 1839          dc.b      130,130,130,130,130,130,130,130,130,130,130
08001083  8282 8282 
08001087  8282 82   
0800108A  8282 8282 1840          dc.b      130,130,130,130,130,130,160,160,160,160,160
0800108E  8282 A0A0 
08001092  A0A0 A0   
08001095  A089 8989 1841          dc.b      160,137,137,137,137,137,137,129,129,129,129
08001099  8989 8981 
0800109D  8181 81   
080010A0  8181 8181 1842          dc.b      129,129,129,129,129,129,129,129,129,129,129
080010A4  8181 8181 
080010A8  8181 81   
080010AB  8181 8181 1843          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
080010AF  81A0 A0A0 
080010B3  A040 0000 
080010B7  00        
080010B8  0000 0000 1844          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080010BC  0000 0000 
080010C0  0000 0000 
080010C4  0000 0000 
080010C8  0000 0000 
080010CC  0000      
080010CE  0000 0000 1845          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080010D2  0000 0000 
080010D6  0000 0000 
080010DA  0000 0000 
080010DE  0000 0000 
080010E2  0000      
080010E4  0000 0000 1846          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080010E8  0000 0000 
080010EC  0000 0000 
080010F0  0000 0000 
080010F4  0000 0000 
080010F8  0000      
080010FA  0000 0000 1847          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080010FE  0000 0000 
08001102  0000 0000 
08001106  0000 0000 
0800110A  0000 0000 
0800110E  0000      
08001110  0000 0000 1848          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08001114  0000 0000 
08001118  0000 0000 
0800111C  0000 0000 
08001120  0000 0000 
08001124  0000      
08001126  0000 0000 1849          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0800112A  0000 0000 
0800112E  0000 0000 
08001132  0000 00   
                    1850          section   data
08001136            1851                   align
                    1852   
                    1853   *********************************************************************************************************************************************************
                    1854   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    1855   ********************************************************************************************************************************************************
                    1856   
          0800 1136 1857   DataStart       equ       *
08001136            1858   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
0800113A            1859   __allocp:       ds.l      1                    start of free memory block list
0800113E            1860   __heap:         ds.l      1                    begin of free memory
                    1861   
                    1862   
                    1863          section   bss
08001142            1864                   align
                    1865   
          0800 1142 1866   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 000C 1867   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    1868   
                    1869   *********************************************************************************************************
                    1870   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    1871   *********************************************************************************************************
          0800 1142 1872   BssStart       equ       *
                    1873   
                    1874          section   heap
08001142            1875                  align
                    1876   
          0800 1142 1877   BssEnd         equ       *
          0000 0000 1878   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    1879   
                    1880   *********************************************************************************************************
                    1881   * Section for Heap
                    1882   *********************************************************************************************************
                    1883   
          0800 1142 1884   heap           equ       *
08001142            1885                  align
          0800 0000

Assembly errors: 0
